name: Build with Race Detector and Publish to GHCR
run-name: Build -race and publish ${{ github.ref_name }} as ${{ inputs.dockerTag }}

on:
  workflow_dispatch:
    inputs:
      dockerTag:
        description: 'Docker Tag'
        required: true
        type: string
        default: 'latest'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_TAG: ${{ inputs.dockerTag }}

permissions: {}

jobs:
  race-docker-publish:
    name: Build with -race and Publish to Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
          check-latest: true
          cache: false

      - name: Get dependencies
        run: go mod vendor

      - name: Build Go binary with -race
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=amd64 go build -race -o bin/node ./cmd/node

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=sha
            type=raw,value=${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description="Race build of Waves Node"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_BINARY=bin/node
