waves {
  blockchain.type = CUSTOM
  directory = /tmp/waves
  ntp-server = "0.ru.pool.ntp.org"
  db.store-state-hashes = true
  network {
    known-peers = []
    black-list-residence-time = 30s
    peers-broadcast-interval = 2s
    connection-timeout = 30s
    suspension-residence-time = 5s
    declared-address = "scala-node:6868"
    bind-address = "0.0.0.0"
    port = 6868
    node-name = "scalaNode"

    traffic-logger {
      ignore-tx-messages = [1, 2]
      ignore-rx-messages = [1, 2]
    }
  }
  synchronization {
    utx-synchronizer.max-queue-size = 20000
    invalid-blocks-storage.timeout = 100ms
  }
  blockchain {
    type = CUSTOM
    custom {
      address-scheme-character = {{printf "%c" .AddressSchemeCharacter}}
      functionality {
        feature-check-blocks-period = {{.FeaturesVotingPeriod}}
        blocks-for-feature-activation = {{.VotesForFeatureActivation}}
        generation-balance-depth-from-50-to-1000-after-height = {{.GenerationBalanceDepthFrom50To1000AfterHeight}}
        reset-effective-balances-at-height = {{.ResetEffectiveBalanceAtHeight}}
        block-version-3-after-height = {{.BlockVersion3AfterHeight}}
        last-time-based-fork-parameter = 0
        double-features-periods-after-height = {{.DoubleFeaturesPeriodsAfterHeight}}
        max-transaction-time-back-offset = {{.MaxTxTimeBackOffset}}ms
        max-transaction-time-forward-offset = {{.MaxTxTimeForwardOffset}}ms
        pre-activated-features = { {{range .PreactivatedFeatures}}
          {{ . }} = 0 {{end}}
        }
        min-block-time = 5s
        delay-delta = 0
      }
      rewards {
        term = 100000
        initial = 600000000
        min-increment = 50000000
        voting-interval = 10000
      }
      genesis {
        average-block-delay = {{.AverageBlockDelaySeconds}}s
        initial-base-target = {{.Genesis.BaseTarget}}
        initial-balance = 6400000000000000
        timestamp = {{.Genesis.Timestamp}}
        block-timestamp = {{.Genesis.Timestamp}}
        signature = "{{.Genesis.BlockSignature}}"
        transactions = [{{range .Genesis.Transactions}}
          { recipient = {{.Recipient}}, amount = {{.Amount}} }{{end}}
        ]
      }
    }
  }
  features.auto-shutdown-on-unsupported-feature = no
  matcher.enable = no
  miner {
    enable = yes
    quorum = 1
    interval-after-last-block-then-generation-is-allowed = 1h
    micro-block-interval = 5s
    min-micro-block-age = 0s
  }
  rest-api {
    enable = yes
    bind-address = 0.0.0.0
    api-key-hash = 7L6GpLHhA5KyJTAVc8WFHwEcyTY8fC8rRbyMCiFnM4i
    api-key-different-host = yes
    minimum-peers = 0
  }
  wallet {
    file = "wallet"
    password = test
  }
  utx {
    max-scripted-size = 100000
    allow-skip-checks = false
  }
  extensions = [
    com.wavesplatform.api.grpc.GRPCServerExtension
  ]
  grpc {
    host = 0.0.0.0
    port = 6870
  }
}

akka.actor.debug {
  lifecycle = on
  unhandled = on
}
