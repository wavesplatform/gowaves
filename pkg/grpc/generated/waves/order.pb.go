// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: waves/order.proto

package waves

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order_Side int32

const (
	Order_BUY  Order_Side = 0
	Order_SELL Order_Side = 1
)

// Enum value maps for Order_Side.
var (
	Order_Side_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	Order_Side_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x Order_Side) Enum() *Order_Side {
	p := new(Order_Side)
	*p = x
	return p
}

func (x Order_Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_Side) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_order_proto_enumTypes[0].Descriptor()
}

func (Order_Side) Type() protoreflect.EnumType {
	return &file_waves_order_proto_enumTypes[0]
}

func (x Order_Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_Side.Descriptor instead.
func (Order_Side) EnumDescriptor() ([]byte, []int) {
	return file_waves_order_proto_rawDescGZIP(), []int{1, 0}
}

type Order_PriceMode int32

const (
	Order_DEFAULT        Order_PriceMode = 0
	Order_FIXED_DECIMALS Order_PriceMode = 1
	Order_ASSET_DECIMALS Order_PriceMode = 2
)

// Enum value maps for Order_PriceMode.
var (
	Order_PriceMode_name = map[int32]string{
		0: "DEFAULT",
		1: "FIXED_DECIMALS",
		2: "ASSET_DECIMALS",
	}
	Order_PriceMode_value = map[string]int32{
		"DEFAULT":        0,
		"FIXED_DECIMALS": 1,
		"ASSET_DECIMALS": 2,
	}
)

func (x Order_PriceMode) Enum() *Order_PriceMode {
	p := new(Order_PriceMode)
	*p = x
	return p
}

func (x Order_PriceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_PriceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_order_proto_enumTypes[1].Descriptor()
}

func (Order_PriceMode) Type() protoreflect.EnumType {
	return &file_waves_order_proto_enumTypes[1]
}

func (x Order_PriceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_PriceMode.Descriptor instead.
func (Order_PriceMode) EnumDescriptor() ([]byte, []int) {
	return file_waves_order_proto_rawDescGZIP(), []int{1, 1}
}

type AssetPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmountAssetId []byte                 `protobuf:"bytes,1,opt,name=amount_asset_id,json=amountAssetId,proto3" json:"amount_asset_id,omitempty"`
	PriceAssetId  []byte                 `protobuf:"bytes,2,opt,name=price_asset_id,json=priceAssetId,proto3" json:"price_asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetPair) Reset() {
	*x = AssetPair{}
	mi := &file_waves_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPair) ProtoMessage() {}

func (x *AssetPair) ProtoReflect() protoreflect.Message {
	mi := &file_waves_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPair.ProtoReflect.Descriptor instead.
func (*AssetPair) Descriptor() ([]byte, []int) {
	return file_waves_order_proto_rawDescGZIP(), []int{0}
}

func (x *AssetPair) GetAmountAssetId() []byte {
	if x != nil {
		return x.AmountAssetId
	}
	return nil
}

func (x *AssetPair) GetPriceAssetId() []byte {
	if x != nil {
		return x.PriceAssetId
	}
	return nil
}

type Order struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChainId          int32                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	MatcherPublicKey []byte                 `protobuf:"bytes,3,opt,name=matcher_public_key,json=matcherPublicKey,proto3" json:"matcher_public_key,omitempty"`
	AssetPair        *AssetPair             `protobuf:"bytes,4,opt,name=asset_pair,json=assetPair,proto3" json:"asset_pair,omitempty"`
	OrderSide        Order_Side             `protobuf:"varint,5,opt,name=order_side,json=orderSide,proto3,enum=waves.Order_Side" json:"order_side,omitempty"`
	Amount           int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Price            int64                  `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp        int64                  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Expiration       int64                  `protobuf:"varint,9,opt,name=expiration,proto3" json:"expiration,omitempty"`
	MatcherFee       *Amount                `protobuf:"bytes,10,opt,name=matcher_fee,json=matcherFee,proto3" json:"matcher_fee,omitempty"`
	Version          int32                  `protobuf:"varint,11,opt,name=version,proto3" json:"version,omitempty"`
	Proofs           [][]byte               `protobuf:"bytes,12,rep,name=proofs,proto3" json:"proofs,omitempty"`
	PriceMode        Order_PriceMode        `protobuf:"varint,14,opt,name=price_mode,json=priceMode,proto3,enum=waves.Order_PriceMode" json:"price_mode,omitempty"`
	Attachment       []byte                 `protobuf:"bytes,15,opt,name=attachment,proto3" json:"attachment,omitempty"`
	// Types that are valid to be assigned to Sender:
	//
	//	*Order_SenderPublicKey
	//	*Order_Eip712Signature
	Sender        isOrder_Sender `protobuf_oneof:"sender"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_waves_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_waves_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_waves_order_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Order) GetMatcherPublicKey() []byte {
	if x != nil {
		return x.MatcherPublicKey
	}
	return nil
}

func (x *Order) GetAssetPair() *AssetPair {
	if x != nil {
		return x.AssetPair
	}
	return nil
}

func (x *Order) GetOrderSide() Order_Side {
	if x != nil {
		return x.OrderSide
	}
	return Order_BUY
}

func (x *Order) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Order) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *Order) GetMatcherFee() *Amount {
	if x != nil {
		return x.MatcherFee
	}
	return nil
}

func (x *Order) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Order) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *Order) GetPriceMode() Order_PriceMode {
	if x != nil {
		return x.PriceMode
	}
	return Order_DEFAULT
}

func (x *Order) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Order) GetSender() isOrder_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Order) GetSenderPublicKey() []byte {
	if x != nil {
		if x, ok := x.Sender.(*Order_SenderPublicKey); ok {
			return x.SenderPublicKey
		}
	}
	return nil
}

func (x *Order) GetEip712Signature() []byte {
	if x != nil {
		if x, ok := x.Sender.(*Order_Eip712Signature); ok {
			return x.Eip712Signature
		}
	}
	return nil
}

type isOrder_Sender interface {
	isOrder_Sender()
}

type Order_SenderPublicKey struct {
	SenderPublicKey []byte `protobuf:"bytes,2,opt,name=sender_public_key,json=senderPublicKey,proto3,oneof"`
}

type Order_Eip712Signature struct {
	Eip712Signature []byte `protobuf:"bytes,13,opt,name=eip712_signature,json=eip712Signature,proto3,oneof"`
}

func (*Order_SenderPublicKey) isOrder_Sender() {}

func (*Order_Eip712Signature) isOrder_Sender() {}

var File_waves_order_proto protoreflect.FileDescriptor

const file_waves_order_proto_rawDesc = "" +
	"\n" +
	"\x11waves/order.proto\x12\x05waves\x1a\x12waves/amount.proto\"Y\n" +
	"\tAssetPair\x12&\n" +
	"\x0famount_asset_id\x18\x01 \x01(\fR\ramountAssetId\x12$\n" +
	"\x0eprice_asset_id\x18\x02 \x01(\fR\fpriceAssetId\"\x9a\x05\n" +
	"\x05Order\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x05R\achainId\x12,\n" +
	"\x12matcher_public_key\x18\x03 \x01(\fR\x10matcherPublicKey\x12/\n" +
	"\n" +
	"asset_pair\x18\x04 \x01(\v2\x10.waves.AssetPairR\tassetPair\x120\n" +
	"\n" +
	"order_side\x18\x05 \x01(\x0e2\x11.waves.Order.SideR\torderSide\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12\x14\n" +
	"\x05price\x18\a \x01(\x03R\x05price\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\x03R\ttimestamp\x12\x1e\n" +
	"\n" +
	"expiration\x18\t \x01(\x03R\n" +
	"expiration\x12.\n" +
	"\vmatcher_fee\x18\n" +
	" \x01(\v2\r.waves.AmountR\n" +
	"matcherFee\x12\x18\n" +
	"\aversion\x18\v \x01(\x05R\aversion\x12\x16\n" +
	"\x06proofs\x18\f \x03(\fR\x06proofs\x125\n" +
	"\n" +
	"price_mode\x18\x0e \x01(\x0e2\x16.waves.Order.PriceModeR\tpriceMode\x12\x1e\n" +
	"\n" +
	"attachment\x18\x0f \x01(\fR\n" +
	"attachment\x12,\n" +
	"\x11sender_public_key\x18\x02 \x01(\fH\x00R\x0fsenderPublicKey\x12+\n" +
	"\x10eip712_signature\x18\r \x01(\fH\x00R\x0feip712Signature\"\x19\n" +
	"\x04Side\x12\a\n" +
	"\x03BUY\x10\x00\x12\b\n" +
	"\x04SELL\x10\x01\"@\n" +
	"\tPriceMode\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\x12\n" +
	"\x0eFIXED_DECIMALS\x10\x01\x12\x12\n" +
	"\x0eASSET_DECIMALS\x10\x02B\b\n" +
	"\x06senderBe\n" +
	" com.wavesplatform.protobuf.orderZ9github.com/wavesplatform/gowaves/pkg/grpc/generated/waves\xaa\x02\x05Wavesb\x06proto3"

var (
	file_waves_order_proto_rawDescOnce sync.Once
	file_waves_order_proto_rawDescData []byte
)

func file_waves_order_proto_rawDescGZIP() []byte {
	file_waves_order_proto_rawDescOnce.Do(func() {
		file_waves_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waves_order_proto_rawDesc), len(file_waves_order_proto_rawDesc)))
	})
	return file_waves_order_proto_rawDescData
}

var file_waves_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_waves_order_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_waves_order_proto_goTypes = []any{
	(Order_Side)(0),      // 0: waves.Order.Side
	(Order_PriceMode)(0), // 1: waves.Order.PriceMode
	(*AssetPair)(nil),    // 2: waves.AssetPair
	(*Order)(nil),        // 3: waves.Order
	(*Amount)(nil),       // 4: waves.Amount
}
var file_waves_order_proto_depIdxs = []int32{
	2, // 0: waves.Order.asset_pair:type_name -> waves.AssetPair
	0, // 1: waves.Order.order_side:type_name -> waves.Order.Side
	4, // 2: waves.Order.matcher_fee:type_name -> waves.Amount
	1, // 3: waves.Order.price_mode:type_name -> waves.Order.PriceMode
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_waves_order_proto_init() }
func file_waves_order_proto_init() {
	if File_waves_order_proto != nil {
		return
	}
	file_waves_amount_proto_init()
	file_waves_order_proto_msgTypes[1].OneofWrappers = []any{
		(*Order_SenderPublicKey)(nil),
		(*Order_Eip712Signature)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waves_order_proto_rawDesc), len(file_waves_order_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_order_proto_goTypes,
		DependencyIndexes: file_waves_order_proto_depIdxs,
		EnumInfos:         file_waves_order_proto_enumTypes,
		MessageInfos:      file_waves_order_proto_msgTypes,
	}.Build()
	File_waves_order_proto = out.File
	file_waves_order_proto_goTypes = nil
	file_waves_order_proto_depIdxs = nil
}
