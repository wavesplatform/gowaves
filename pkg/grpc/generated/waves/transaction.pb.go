// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: waves/transaction.proto

package waves

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Proofs      [][]byte     `protobuf:"bytes,2,rep,name=proofs,proto3" json:"proofs,omitempty"`
}

func (x *SignedTransaction) Reset() {
	*x = SignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedTransaction) ProtoMessage() {}

func (x *SignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedTransaction.ProtoReflect.Descriptor instead.
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *SignedTransaction) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SignedTransaction) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId         int32   `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	SenderPublicKey []byte  `protobuf:"bytes,2,opt,name=sender_public_key,json=senderPublicKey,proto3" json:"sender_public_key,omitempty"`
	Fee             *Amount `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Timestamp       int64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version         int32   `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are assignable to Data:
	//	*Transaction_Genesis
	//	*Transaction_Payment
	//	*Transaction_Issue
	//	*Transaction_Transfer
	//	*Transaction_Reissue
	//	*Transaction_Burn
	//	*Transaction_Exchange
	//	*Transaction_Lease
	//	*Transaction_LeaseCancel
	//	*Transaction_CreateAlias
	//	*Transaction_MassTransfer
	//	*Transaction_DataTransaction
	//	*Transaction_SetScript
	//	*Transaction_SponsorFee
	//	*Transaction_SetAssetScript
	//	*Transaction_InvokeScript
	//	*Transaction_UpdateAssetInfo
	Data isTransaction_Data `protobuf_oneof:"data"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Transaction) GetSenderPublicKey() []byte {
	if x != nil {
		return x.SenderPublicKey
	}
	return nil
}

func (x *Transaction) GetFee() *Amount {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (m *Transaction) GetData() isTransaction_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Transaction) GetGenesis() *GenesisTransactionData {
	if x, ok := x.GetData().(*Transaction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (x *Transaction) GetPayment() *PaymentTransactionData {
	if x, ok := x.GetData().(*Transaction_Payment); ok {
		return x.Payment
	}
	return nil
}

func (x *Transaction) GetIssue() *IssueTransactionData {
	if x, ok := x.GetData().(*Transaction_Issue); ok {
		return x.Issue
	}
	return nil
}

func (x *Transaction) GetTransfer() *TransferTransactionData {
	if x, ok := x.GetData().(*Transaction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *Transaction) GetReissue() *ReissueTransactionData {
	if x, ok := x.GetData().(*Transaction_Reissue); ok {
		return x.Reissue
	}
	return nil
}

func (x *Transaction) GetBurn() *BurnTransactionData {
	if x, ok := x.GetData().(*Transaction_Burn); ok {
		return x.Burn
	}
	return nil
}

func (x *Transaction) GetExchange() *ExchangeTransactionData {
	if x, ok := x.GetData().(*Transaction_Exchange); ok {
		return x.Exchange
	}
	return nil
}

func (x *Transaction) GetLease() *LeaseTransactionData {
	if x, ok := x.GetData().(*Transaction_Lease); ok {
		return x.Lease
	}
	return nil
}

func (x *Transaction) GetLeaseCancel() *LeaseCancelTransactionData {
	if x, ok := x.GetData().(*Transaction_LeaseCancel); ok {
		return x.LeaseCancel
	}
	return nil
}

func (x *Transaction) GetCreateAlias() *CreateAliasTransactionData {
	if x, ok := x.GetData().(*Transaction_CreateAlias); ok {
		return x.CreateAlias
	}
	return nil
}

func (x *Transaction) GetMassTransfer() *MassTransferTransactionData {
	if x, ok := x.GetData().(*Transaction_MassTransfer); ok {
		return x.MassTransfer
	}
	return nil
}

func (x *Transaction) GetDataTransaction() *DataTransactionData {
	if x, ok := x.GetData().(*Transaction_DataTransaction); ok {
		return x.DataTransaction
	}
	return nil
}

func (x *Transaction) GetSetScript() *SetScriptTransactionData {
	if x, ok := x.GetData().(*Transaction_SetScript); ok {
		return x.SetScript
	}
	return nil
}

func (x *Transaction) GetSponsorFee() *SponsorFeeTransactionData {
	if x, ok := x.GetData().(*Transaction_SponsorFee); ok {
		return x.SponsorFee
	}
	return nil
}

func (x *Transaction) GetSetAssetScript() *SetAssetScriptTransactionData {
	if x, ok := x.GetData().(*Transaction_SetAssetScript); ok {
		return x.SetAssetScript
	}
	return nil
}

func (x *Transaction) GetInvokeScript() *InvokeScriptTransactionData {
	if x, ok := x.GetData().(*Transaction_InvokeScript); ok {
		return x.InvokeScript
	}
	return nil
}

func (x *Transaction) GetUpdateAssetInfo() *UpdateAssetInfoTransactionData {
	if x, ok := x.GetData().(*Transaction_UpdateAssetInfo); ok {
		return x.UpdateAssetInfo
	}
	return nil
}

type isTransaction_Data interface {
	isTransaction_Data()
}

type Transaction_Genesis struct {
	Genesis *GenesisTransactionData `protobuf:"bytes,101,opt,name=genesis,proto3,oneof"`
}

type Transaction_Payment struct {
	Payment *PaymentTransactionData `protobuf:"bytes,102,opt,name=payment,proto3,oneof"`
}

type Transaction_Issue struct {
	Issue *IssueTransactionData `protobuf:"bytes,103,opt,name=issue,proto3,oneof"`
}

type Transaction_Transfer struct {
	Transfer *TransferTransactionData `protobuf:"bytes,104,opt,name=transfer,proto3,oneof"`
}

type Transaction_Reissue struct {
	Reissue *ReissueTransactionData `protobuf:"bytes,105,opt,name=reissue,proto3,oneof"`
}

type Transaction_Burn struct {
	Burn *BurnTransactionData `protobuf:"bytes,106,opt,name=burn,proto3,oneof"`
}

type Transaction_Exchange struct {
	Exchange *ExchangeTransactionData `protobuf:"bytes,107,opt,name=exchange,proto3,oneof"`
}

type Transaction_Lease struct {
	Lease *LeaseTransactionData `protobuf:"bytes,108,opt,name=lease,proto3,oneof"`
}

type Transaction_LeaseCancel struct {
	LeaseCancel *LeaseCancelTransactionData `protobuf:"bytes,109,opt,name=lease_cancel,json=leaseCancel,proto3,oneof"`
}

type Transaction_CreateAlias struct {
	CreateAlias *CreateAliasTransactionData `protobuf:"bytes,110,opt,name=create_alias,json=createAlias,proto3,oneof"`
}

type Transaction_MassTransfer struct {
	MassTransfer *MassTransferTransactionData `protobuf:"bytes,111,opt,name=mass_transfer,json=massTransfer,proto3,oneof"`
}

type Transaction_DataTransaction struct {
	DataTransaction *DataTransactionData `protobuf:"bytes,112,opt,name=data_transaction,json=dataTransaction,proto3,oneof"`
}

type Transaction_SetScript struct {
	SetScript *SetScriptTransactionData `protobuf:"bytes,113,opt,name=set_script,json=setScript,proto3,oneof"`
}

type Transaction_SponsorFee struct {
	SponsorFee *SponsorFeeTransactionData `protobuf:"bytes,114,opt,name=sponsor_fee,json=sponsorFee,proto3,oneof"`
}

type Transaction_SetAssetScript struct {
	SetAssetScript *SetAssetScriptTransactionData `protobuf:"bytes,115,opt,name=set_asset_script,json=setAssetScript,proto3,oneof"`
}

type Transaction_InvokeScript struct {
	InvokeScript *InvokeScriptTransactionData `protobuf:"bytes,116,opt,name=invoke_script,json=invokeScript,proto3,oneof"`
}

type Transaction_UpdateAssetInfo struct {
	UpdateAssetInfo *UpdateAssetInfoTransactionData `protobuf:"bytes,117,opt,name=update_asset_info,json=updateAssetInfo,proto3,oneof"`
}

func (*Transaction_Genesis) isTransaction_Data() {}

func (*Transaction_Payment) isTransaction_Data() {}

func (*Transaction_Issue) isTransaction_Data() {}

func (*Transaction_Transfer) isTransaction_Data() {}

func (*Transaction_Reissue) isTransaction_Data() {}

func (*Transaction_Burn) isTransaction_Data() {}

func (*Transaction_Exchange) isTransaction_Data() {}

func (*Transaction_Lease) isTransaction_Data() {}

func (*Transaction_LeaseCancel) isTransaction_Data() {}

func (*Transaction_CreateAlias) isTransaction_Data() {}

func (*Transaction_MassTransfer) isTransaction_Data() {}

func (*Transaction_DataTransaction) isTransaction_Data() {}

func (*Transaction_SetScript) isTransaction_Data() {}

func (*Transaction_SponsorFee) isTransaction_Data() {}

func (*Transaction_SetAssetScript) isTransaction_Data() {}

func (*Transaction_InvokeScript) isTransaction_Data() {}

func (*Transaction_UpdateAssetInfo) isTransaction_Data() {}

type GenesisTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientAddress []byte `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GenesisTransactionData) Reset() {
	*x = GenesisTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisTransactionData) ProtoMessage() {}

func (x *GenesisTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisTransactionData.ProtoReflect.Descriptor instead.
func (*GenesisTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *GenesisTransactionData) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *GenesisTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientAddress []byte `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PaymentTransactionData) Reset() {
	*x = PaymentTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTransactionData) ProtoMessage() {}

func (x *PaymentTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTransactionData.ProtoReflect.Descriptor instead.
func (*PaymentTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentTransactionData) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *PaymentTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TransferTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient  *Recipient `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount     *Amount    `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Attachment []byte     `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *TransferTransactionData) Reset() {
	*x = TransferTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTransactionData) ProtoMessage() {}

func (x *TransferTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTransactionData.ProtoReflect.Descriptor instead.
func (*TransferTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransferTransactionData) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *TransferTransactionData) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransferTransactionData) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateAliasTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *CreateAliasTransactionData) Reset() {
	*x = CreateAliasTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAliasTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAliasTransactionData) ProtoMessage() {}

func (x *CreateAliasTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAliasTransactionData.ProtoReflect.Descriptor instead.
func (*CreateAliasTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAliasTransactionData) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type DataTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DataTransactionData_DataEntry `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DataTransactionData) Reset() {
	*x = DataTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransactionData) ProtoMessage() {}

func (x *DataTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransactionData.ProtoReflect.Descriptor instead.
func (*DataTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *DataTransactionData) GetData() []*DataTransactionData_DataEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

type MassTransferTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId    []byte                                  `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Transfers  []*MassTransferTransactionData_Transfer `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Attachment []byte                                  `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *MassTransferTransactionData) Reset() {
	*x = MassTransferTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassTransferTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassTransferTransactionData) ProtoMessage() {}

func (x *MassTransferTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassTransferTransactionData.ProtoReflect.Descriptor instead.
func (*MassTransferTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *MassTransferTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *MassTransferTransactionData) GetTransfers() []*MassTransferTransactionData_Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *MassTransferTransactionData) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type LeaseTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient *Recipient `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    int64      `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *LeaseTransactionData) Reset() {
	*x = LeaseTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseTransactionData) ProtoMessage() {}

func (x *LeaseTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseTransactionData.ProtoReflect.Descriptor instead.
func (*LeaseTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *LeaseTransactionData) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *LeaseTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type LeaseCancelTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaseId []byte `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
}

func (x *LeaseCancelTransactionData) Reset() {
	*x = LeaseCancelTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseCancelTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseCancelTransactionData) ProtoMessage() {}

func (x *LeaseCancelTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseCancelTransactionData.ProtoReflect.Descriptor instead.
func (*LeaseCancelTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *LeaseCancelTransactionData) GetLeaseId() []byte {
	if x != nil {
		return x.LeaseId
	}
	return nil
}

type BurnTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetAmount *Amount `protobuf:"bytes,1,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"`
}

func (x *BurnTransactionData) Reset() {
	*x = BurnTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnTransactionData) ProtoMessage() {}

func (x *BurnTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnTransactionData.ProtoReflect.Descriptor instead.
func (*BurnTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *BurnTransactionData) GetAssetAmount() *Amount {
	if x != nil {
		return x.AssetAmount
	}
	return nil
}

type IssueTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Amount      int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals    int32  `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Reissuable  bool   `protobuf:"varint,5,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	Script      []byte `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *IssueTransactionData) Reset() {
	*x = IssueTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTransactionData) ProtoMessage() {}

func (x *IssueTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTransactionData.ProtoReflect.Descriptor instead.
func (*IssueTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *IssueTransactionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IssueTransactionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IssueTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IssueTransactionData) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *IssueTransactionData) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

func (x *IssueTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type ReissueTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetAmount *Amount `protobuf:"bytes,1,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"`
	Reissuable  bool    `protobuf:"varint,2,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
}

func (x *ReissueTransactionData) Reset() {
	*x = ReissueTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReissueTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReissueTransactionData) ProtoMessage() {}

func (x *ReissueTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReissueTransactionData.ProtoReflect.Descriptor instead.
func (*ReissueTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *ReissueTransactionData) GetAssetAmount() *Amount {
	if x != nil {
		return x.AssetAmount
	}
	return nil
}

func (x *ReissueTransactionData) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

type SetAssetScriptTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Script  []byte `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *SetAssetScriptTransactionData) Reset() {
	*x = SetAssetScriptTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAssetScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAssetScriptTransactionData) ProtoMessage() {}

func (x *SetAssetScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAssetScriptTransactionData.ProtoReflect.Descriptor instead.
func (*SetAssetScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *SetAssetScriptTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *SetAssetScriptTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type SetScriptTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script []byte `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *SetScriptTransactionData) Reset() {
	*x = SetScriptTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScriptTransactionData) ProtoMessage() {}

func (x *SetScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScriptTransactionData.ProtoReflect.Descriptor instead.
func (*SetScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *SetScriptTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type ExchangeTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount         int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Price          int64    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	BuyMatcherFee  int64    `protobuf:"varint,3,opt,name=buy_matcher_fee,json=buyMatcherFee,proto3" json:"buy_matcher_fee,omitempty"`
	SellMatcherFee int64    `protobuf:"varint,4,opt,name=sell_matcher_fee,json=sellMatcherFee,proto3" json:"sell_matcher_fee,omitempty"`
	Orders         []*Order `protobuf:"bytes,5,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ExchangeTransactionData) Reset() {
	*x = ExchangeTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeTransactionData) ProtoMessage() {}

func (x *ExchangeTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeTransactionData.ProtoReflect.Descriptor instead.
func (*ExchangeTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *ExchangeTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExchangeTransactionData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ExchangeTransactionData) GetBuyMatcherFee() int64 {
	if x != nil {
		return x.BuyMatcherFee
	}
	return 0
}

func (x *ExchangeTransactionData) GetSellMatcherFee() int64 {
	if x != nil {
		return x.SellMatcherFee
	}
	return 0
}

func (x *ExchangeTransactionData) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type SponsorFeeTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinFee *Amount `protobuf:"bytes,1,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
}

func (x *SponsorFeeTransactionData) Reset() {
	*x = SponsorFeeTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorFeeTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorFeeTransactionData) ProtoMessage() {}

func (x *SponsorFeeTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorFeeTransactionData.ProtoReflect.Descriptor instead.
func (*SponsorFeeTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *SponsorFeeTransactionData) GetMinFee() *Amount {
	if x != nil {
		return x.MinFee
	}
	return nil
}

type InvokeScriptTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DApp         *Recipient `protobuf:"bytes,1,opt,name=d_app,json=dApp,proto3" json:"d_app,omitempty"`
	FunctionCall []byte     `protobuf:"bytes,2,opt,name=function_call,json=functionCall,proto3" json:"function_call,omitempty"`
	Payments     []*Amount  `protobuf:"bytes,3,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *InvokeScriptTransactionData) Reset() {
	*x = InvokeScriptTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScriptTransactionData) ProtoMessage() {}

func (x *InvokeScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScriptTransactionData.ProtoReflect.Descriptor instead.
func (*InvokeScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *InvokeScriptTransactionData) GetDApp() *Recipient {
	if x != nil {
		return x.DApp
	}
	return nil
}

func (x *InvokeScriptTransactionData) GetFunctionCall() []byte {
	if x != nil {
		return x.FunctionCall
	}
	return nil
}

func (x *InvokeScriptTransactionData) GetPayments() []*Amount {
	if x != nil {
		return x.Payments
	}
	return nil
}

type UpdateAssetInfoTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId     []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateAssetInfoTransactionData) Reset() {
	*x = UpdateAssetInfoTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetInfoTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetInfoTransactionData) ProtoMessage() {}

func (x *UpdateAssetInfoTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetInfoTransactionData.ProtoReflect.Descriptor instead.
func (*UpdateAssetInfoTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAssetInfoTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *UpdateAssetInfoTransactionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAssetInfoTransactionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DataTransactionData_DataEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Value:
	//	*DataTransactionData_DataEntry_IntValue
	//	*DataTransactionData_DataEntry_BoolValue
	//	*DataTransactionData_DataEntry_BinaryValue
	//	*DataTransactionData_DataEntry_StringValue
	Value isDataTransactionData_DataEntry_Value `protobuf_oneof:"value"`
}

func (x *DataTransactionData_DataEntry) Reset() {
	*x = DataTransactionData_DataEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataTransactionData_DataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransactionData_DataEntry) ProtoMessage() {}

func (x *DataTransactionData_DataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransactionData_DataEntry.ProtoReflect.Descriptor instead.
func (*DataTransactionData_DataEntry) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DataTransactionData_DataEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *DataTransactionData_DataEntry) GetValue() isDataTransactionData_DataEntry_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DataTransactionData_DataEntry) GetIntValue() int64 {
	if x, ok := x.GetValue().(*DataTransactionData_DataEntry_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *DataTransactionData_DataEntry) GetBoolValue() bool {
	if x, ok := x.GetValue().(*DataTransactionData_DataEntry_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *DataTransactionData_DataEntry) GetBinaryValue() []byte {
	if x, ok := x.GetValue().(*DataTransactionData_DataEntry_BinaryValue); ok {
		return x.BinaryValue
	}
	return nil
}

func (x *DataTransactionData_DataEntry) GetStringValue() string {
	if x, ok := x.GetValue().(*DataTransactionData_DataEntry_StringValue); ok {
		return x.StringValue
	}
	return ""
}

type isDataTransactionData_DataEntry_Value interface {
	isDataTransactionData_DataEntry_Value()
}

type DataTransactionData_DataEntry_IntValue struct {
	IntValue int64 `protobuf:"varint,10,opt,name=int_value,json=intValue,proto3,oneof"`
}

type DataTransactionData_DataEntry_BoolValue struct {
	BoolValue bool `protobuf:"varint,11,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type DataTransactionData_DataEntry_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,12,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

type DataTransactionData_DataEntry_StringValue struct {
	StringValue string `protobuf:"bytes,13,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*DataTransactionData_DataEntry_IntValue) isDataTransactionData_DataEntry_Value() {}

func (*DataTransactionData_DataEntry_BoolValue) isDataTransactionData_DataEntry_Value() {}

func (*DataTransactionData_DataEntry_BinaryValue) isDataTransactionData_DataEntry_Value() {}

func (*DataTransactionData_DataEntry_StringValue) isDataTransactionData_DataEntry_Value() {}

type MassTransferTransactionData_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient *Recipient `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    int64      `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MassTransferTransactionData_Transfer) Reset() {
	*x = MassTransferTransactionData_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MassTransferTransactionData_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassTransferTransactionData_Transfer) ProtoMessage() {}

func (x *MassTransferTransactionData_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassTransferTransactionData_Transfer.ProtoReflect.Descriptor instead.
func (*MassTransferTransactionData_Transfer) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{7, 0}
}

func (x *MassTransferTransactionData_Transfer) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *MassTransferTransactionData_Transfer) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_waves_transaction_proto protoreflect.FileDescriptor

var file_waves_transaction_proto_rawDesc = []byte{
	0x0a, 0x17, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x1a, 0x12, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61,
	0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x73, 0x22, 0x9b, 0x0a, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x75, 0x72, 0x6e, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x72, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x75, 0x72, 0x6e, 0x12, 0x3c, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x12, 0x46, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x6d, 0x61,
	0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x12, 0x43, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x70,
	0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x6f, 0x72, 0x46, 0x65, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5d, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d,
	0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x32, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xb0, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x1b, 0x4d, 0x61,
	0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e,
	0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x52, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x13,
	0x42, 0x75, 0x72, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x69, 0x73,
	0x73, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x69, 0x73, 0x73, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x22, 0x6a, 0x0a, 0x16, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x69, 0x73, 0x73, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x69, 0x73, 0x73, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x1d,
	0x53, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x22, 0x32, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x43, 0x0a, 0x19, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x1b,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x05, 0x64,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x41,
	0x70, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x71, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6b, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5a,
	0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x67, 0x6f, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x77, 0x61, 0x76, 0x65, 0x73, 0xaa, 0x02, 0x05, 0x57, 0x61, 0x76,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_waves_transaction_proto_rawDescOnce sync.Once
	file_waves_transaction_proto_rawDescData = file_waves_transaction_proto_rawDesc
)

func file_waves_transaction_proto_rawDescGZIP() []byte {
	file_waves_transaction_proto_rawDescOnce.Do(func() {
		file_waves_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_waves_transaction_proto_rawDescData)
	})
	return file_waves_transaction_proto_rawDescData
}

var file_waves_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_waves_transaction_proto_goTypes = []interface{}{
	(*SignedTransaction)(nil),                    // 0: waves.SignedTransaction
	(*Transaction)(nil),                          // 1: waves.Transaction
	(*GenesisTransactionData)(nil),               // 2: waves.GenesisTransactionData
	(*PaymentTransactionData)(nil),               // 3: waves.PaymentTransactionData
	(*TransferTransactionData)(nil),              // 4: waves.TransferTransactionData
	(*CreateAliasTransactionData)(nil),           // 5: waves.CreateAliasTransactionData
	(*DataTransactionData)(nil),                  // 6: waves.DataTransactionData
	(*MassTransferTransactionData)(nil),          // 7: waves.MassTransferTransactionData
	(*LeaseTransactionData)(nil),                 // 8: waves.LeaseTransactionData
	(*LeaseCancelTransactionData)(nil),           // 9: waves.LeaseCancelTransactionData
	(*BurnTransactionData)(nil),                  // 10: waves.BurnTransactionData
	(*IssueTransactionData)(nil),                 // 11: waves.IssueTransactionData
	(*ReissueTransactionData)(nil),               // 12: waves.ReissueTransactionData
	(*SetAssetScriptTransactionData)(nil),        // 13: waves.SetAssetScriptTransactionData
	(*SetScriptTransactionData)(nil),             // 14: waves.SetScriptTransactionData
	(*ExchangeTransactionData)(nil),              // 15: waves.ExchangeTransactionData
	(*SponsorFeeTransactionData)(nil),            // 16: waves.SponsorFeeTransactionData
	(*InvokeScriptTransactionData)(nil),          // 17: waves.InvokeScriptTransactionData
	(*UpdateAssetInfoTransactionData)(nil),       // 18: waves.UpdateAssetInfoTransactionData
	(*DataTransactionData_DataEntry)(nil),        // 19: waves.DataTransactionData.DataEntry
	(*MassTransferTransactionData_Transfer)(nil), // 20: waves.MassTransferTransactionData.Transfer
	(*Amount)(nil),                               // 21: waves.Amount
	(*Recipient)(nil),                            // 22: waves.Recipient
	(*Order)(nil),                                // 23: waves.Order
}
var file_waves_transaction_proto_depIdxs = []int32{
	1,  // 0: waves.SignedTransaction.transaction:type_name -> waves.Transaction
	21, // 1: waves.Transaction.fee:type_name -> waves.Amount
	2,  // 2: waves.Transaction.genesis:type_name -> waves.GenesisTransactionData
	3,  // 3: waves.Transaction.payment:type_name -> waves.PaymentTransactionData
	11, // 4: waves.Transaction.issue:type_name -> waves.IssueTransactionData
	4,  // 5: waves.Transaction.transfer:type_name -> waves.TransferTransactionData
	12, // 6: waves.Transaction.reissue:type_name -> waves.ReissueTransactionData
	10, // 7: waves.Transaction.burn:type_name -> waves.BurnTransactionData
	15, // 8: waves.Transaction.exchange:type_name -> waves.ExchangeTransactionData
	8,  // 9: waves.Transaction.lease:type_name -> waves.LeaseTransactionData
	9,  // 10: waves.Transaction.lease_cancel:type_name -> waves.LeaseCancelTransactionData
	5,  // 11: waves.Transaction.create_alias:type_name -> waves.CreateAliasTransactionData
	7,  // 12: waves.Transaction.mass_transfer:type_name -> waves.MassTransferTransactionData
	6,  // 13: waves.Transaction.data_transaction:type_name -> waves.DataTransactionData
	14, // 14: waves.Transaction.set_script:type_name -> waves.SetScriptTransactionData
	16, // 15: waves.Transaction.sponsor_fee:type_name -> waves.SponsorFeeTransactionData
	13, // 16: waves.Transaction.set_asset_script:type_name -> waves.SetAssetScriptTransactionData
	17, // 17: waves.Transaction.invoke_script:type_name -> waves.InvokeScriptTransactionData
	18, // 18: waves.Transaction.update_asset_info:type_name -> waves.UpdateAssetInfoTransactionData
	22, // 19: waves.TransferTransactionData.recipient:type_name -> waves.Recipient
	21, // 20: waves.TransferTransactionData.amount:type_name -> waves.Amount
	19, // 21: waves.DataTransactionData.data:type_name -> waves.DataTransactionData.DataEntry
	20, // 22: waves.MassTransferTransactionData.transfers:type_name -> waves.MassTransferTransactionData.Transfer
	22, // 23: waves.LeaseTransactionData.recipient:type_name -> waves.Recipient
	21, // 24: waves.BurnTransactionData.asset_amount:type_name -> waves.Amount
	21, // 25: waves.ReissueTransactionData.asset_amount:type_name -> waves.Amount
	23, // 26: waves.ExchangeTransactionData.orders:type_name -> waves.Order
	21, // 27: waves.SponsorFeeTransactionData.min_fee:type_name -> waves.Amount
	22, // 28: waves.InvokeScriptTransactionData.d_app:type_name -> waves.Recipient
	21, // 29: waves.InvokeScriptTransactionData.payments:type_name -> waves.Amount
	22, // 30: waves.MassTransferTransactionData.Transfer.recipient:type_name -> waves.Recipient
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_waves_transaction_proto_init() }
func file_waves_transaction_proto_init() {
	if File_waves_transaction_proto != nil {
		return
	}
	file_waves_amount_proto_init()
	file_waves_recipient_proto_init()
	file_waves_order_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_waves_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAliasTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassTransferTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseCancelTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReissueTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAssetScriptTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScriptTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorFeeTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScriptTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssetInfoTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataTransactionData_DataEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MassTransferTransactionData_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_waves_transaction_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Transaction_Genesis)(nil),
		(*Transaction_Payment)(nil),
		(*Transaction_Issue)(nil),
		(*Transaction_Transfer)(nil),
		(*Transaction_Reissue)(nil),
		(*Transaction_Burn)(nil),
		(*Transaction_Exchange)(nil),
		(*Transaction_Lease)(nil),
		(*Transaction_LeaseCancel)(nil),
		(*Transaction_CreateAlias)(nil),
		(*Transaction_MassTransfer)(nil),
		(*Transaction_DataTransaction)(nil),
		(*Transaction_SetScript)(nil),
		(*Transaction_SponsorFee)(nil),
		(*Transaction_SetAssetScript)(nil),
		(*Transaction_InvokeScript)(nil),
		(*Transaction_UpdateAssetInfo)(nil),
	}
	file_waves_transaction_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*DataTransactionData_DataEntry_IntValue)(nil),
		(*DataTransactionData_DataEntry_BoolValue)(nil),
		(*DataTransactionData_DataEntry_BinaryValue)(nil),
		(*DataTransactionData_DataEntry_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_waves_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_transaction_proto_goTypes,
		DependencyIndexes: file_waves_transaction_proto_depIdxs,
		MessageInfos:      file_waves_transaction_proto_msgTypes,
	}.Build()
	File_waves_transaction_proto = out.File
	file_waves_transaction_proto_rawDesc = nil
	file_waves_transaction_proto_goTypes = nil
	file_waves_transaction_proto_depIdxs = nil
}
