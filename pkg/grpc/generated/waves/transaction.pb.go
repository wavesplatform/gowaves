// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: waves/transaction.proto

package waves

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignedTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Transaction:
	//
	//	*SignedTransaction_WavesTransaction
	//	*SignedTransaction_EthereumTransaction
	Transaction   isSignedTransaction_Transaction `protobuf_oneof:"transaction"`
	Proofs        [][]byte                        `protobuf:"bytes,2,rep,name=proofs,proto3" json:"proofs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedTransaction) Reset() {
	*x = SignedTransaction{}
	mi := &file_waves_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedTransaction) ProtoMessage() {}

func (x *SignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedTransaction.ProtoReflect.Descriptor instead.
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *SignedTransaction) GetTransaction() isSignedTransaction_Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SignedTransaction) GetWavesTransaction() *Transaction {
	if x != nil {
		if x, ok := x.Transaction.(*SignedTransaction_WavesTransaction); ok {
			return x.WavesTransaction
		}
	}
	return nil
}

func (x *SignedTransaction) GetEthereumTransaction() []byte {
	if x != nil {
		if x, ok := x.Transaction.(*SignedTransaction_EthereumTransaction); ok {
			return x.EthereumTransaction
		}
	}
	return nil
}

func (x *SignedTransaction) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

type isSignedTransaction_Transaction interface {
	isSignedTransaction_Transaction()
}

type SignedTransaction_WavesTransaction struct {
	WavesTransaction *Transaction `protobuf:"bytes,1,opt,name=waves_transaction,json=wavesTransaction,proto3,oneof"`
}

type SignedTransaction_EthereumTransaction struct {
	EthereumTransaction []byte `protobuf:"bytes,3,opt,name=ethereum_transaction,json=ethereumTransaction,proto3,oneof"`
}

func (*SignedTransaction_WavesTransaction) isSignedTransaction_Transaction() {}

func (*SignedTransaction_EthereumTransaction) isSignedTransaction_Transaction() {}

type Transaction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChainId         int32                  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	SenderPublicKey []byte                 `protobuf:"bytes,2,opt,name=sender_public_key,json=senderPublicKey,proto3" json:"sender_public_key,omitempty"`
	Fee             *Amount                `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Timestamp       int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version         int32                  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*Transaction_Genesis
	//	*Transaction_Payment
	//	*Transaction_Issue
	//	*Transaction_Transfer
	//	*Transaction_Reissue
	//	*Transaction_Burn
	//	*Transaction_Exchange
	//	*Transaction_Lease
	//	*Transaction_LeaseCancel
	//	*Transaction_CreateAlias
	//	*Transaction_MassTransfer
	//	*Transaction_DataTransaction
	//	*Transaction_SetScript
	//	*Transaction_SponsorFee
	//	*Transaction_SetAssetScript
	//	*Transaction_InvokeScript
	//	*Transaction_UpdateAssetInfo
	//	*Transaction_InvokeExpression
	Data          isTransaction_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_waves_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Transaction) GetSenderPublicKey() []byte {
	if x != nil {
		return x.SenderPublicKey
	}
	return nil
}

func (x *Transaction) GetFee() *Amount {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetData() isTransaction_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction) GetGenesis() *GenesisTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Genesis); ok {
			return x.Genesis
		}
	}
	return nil
}

func (x *Transaction) GetPayment() *PaymentTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Payment); ok {
			return x.Payment
		}
	}
	return nil
}

func (x *Transaction) GetIssue() *IssueTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Issue); ok {
			return x.Issue
		}
	}
	return nil
}

func (x *Transaction) GetTransfer() *TransferTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *Transaction) GetReissue() *ReissueTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Reissue); ok {
			return x.Reissue
		}
	}
	return nil
}

func (x *Transaction) GetBurn() *BurnTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Burn); ok {
			return x.Burn
		}
	}
	return nil
}

func (x *Transaction) GetExchange() *ExchangeTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Exchange); ok {
			return x.Exchange
		}
	}
	return nil
}

func (x *Transaction) GetLease() *LeaseTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_Lease); ok {
			return x.Lease
		}
	}
	return nil
}

func (x *Transaction) GetLeaseCancel() *LeaseCancelTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_LeaseCancel); ok {
			return x.LeaseCancel
		}
	}
	return nil
}

func (x *Transaction) GetCreateAlias() *CreateAliasTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_CreateAlias); ok {
			return x.CreateAlias
		}
	}
	return nil
}

func (x *Transaction) GetMassTransfer() *MassTransferTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_MassTransfer); ok {
			return x.MassTransfer
		}
	}
	return nil
}

func (x *Transaction) GetDataTransaction() *DataTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_DataTransaction); ok {
			return x.DataTransaction
		}
	}
	return nil
}

func (x *Transaction) GetSetScript() *SetScriptTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_SetScript); ok {
			return x.SetScript
		}
	}
	return nil
}

func (x *Transaction) GetSponsorFee() *SponsorFeeTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_SponsorFee); ok {
			return x.SponsorFee
		}
	}
	return nil
}

func (x *Transaction) GetSetAssetScript() *SetAssetScriptTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_SetAssetScript); ok {
			return x.SetAssetScript
		}
	}
	return nil
}

func (x *Transaction) GetInvokeScript() *InvokeScriptTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_InvokeScript); ok {
			return x.InvokeScript
		}
	}
	return nil
}

func (x *Transaction) GetUpdateAssetInfo() *UpdateAssetInfoTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_UpdateAssetInfo); ok {
			return x.UpdateAssetInfo
		}
	}
	return nil
}

func (x *Transaction) GetInvokeExpression() *InvokeExpressionTransactionData {
	if x != nil {
		if x, ok := x.Data.(*Transaction_InvokeExpression); ok {
			return x.InvokeExpression
		}
	}
	return nil
}

type isTransaction_Data interface {
	isTransaction_Data()
}

type Transaction_Genesis struct {
	Genesis *GenesisTransactionData `protobuf:"bytes,101,opt,name=genesis,proto3,oneof"`
}

type Transaction_Payment struct {
	Payment *PaymentTransactionData `protobuf:"bytes,102,opt,name=payment,proto3,oneof"`
}

type Transaction_Issue struct {
	Issue *IssueTransactionData `protobuf:"bytes,103,opt,name=issue,proto3,oneof"`
}

type Transaction_Transfer struct {
	Transfer *TransferTransactionData `protobuf:"bytes,104,opt,name=transfer,proto3,oneof"`
}

type Transaction_Reissue struct {
	Reissue *ReissueTransactionData `protobuf:"bytes,105,opt,name=reissue,proto3,oneof"`
}

type Transaction_Burn struct {
	Burn *BurnTransactionData `protobuf:"bytes,106,opt,name=burn,proto3,oneof"`
}

type Transaction_Exchange struct {
	Exchange *ExchangeTransactionData `protobuf:"bytes,107,opt,name=exchange,proto3,oneof"`
}

type Transaction_Lease struct {
	Lease *LeaseTransactionData `protobuf:"bytes,108,opt,name=lease,proto3,oneof"`
}

type Transaction_LeaseCancel struct {
	LeaseCancel *LeaseCancelTransactionData `protobuf:"bytes,109,opt,name=lease_cancel,json=leaseCancel,proto3,oneof"`
}

type Transaction_CreateAlias struct {
	CreateAlias *CreateAliasTransactionData `protobuf:"bytes,110,opt,name=create_alias,json=createAlias,proto3,oneof"`
}

type Transaction_MassTransfer struct {
	MassTransfer *MassTransferTransactionData `protobuf:"bytes,111,opt,name=mass_transfer,json=massTransfer,proto3,oneof"`
}

type Transaction_DataTransaction struct {
	DataTransaction *DataTransactionData `protobuf:"bytes,112,opt,name=data_transaction,json=dataTransaction,proto3,oneof"`
}

type Transaction_SetScript struct {
	SetScript *SetScriptTransactionData `protobuf:"bytes,113,opt,name=set_script,json=setScript,proto3,oneof"`
}

type Transaction_SponsorFee struct {
	SponsorFee *SponsorFeeTransactionData `protobuf:"bytes,114,opt,name=sponsor_fee,json=sponsorFee,proto3,oneof"`
}

type Transaction_SetAssetScript struct {
	SetAssetScript *SetAssetScriptTransactionData `protobuf:"bytes,115,opt,name=set_asset_script,json=setAssetScript,proto3,oneof"`
}

type Transaction_InvokeScript struct {
	InvokeScript *InvokeScriptTransactionData `protobuf:"bytes,116,opt,name=invoke_script,json=invokeScript,proto3,oneof"`
}

type Transaction_UpdateAssetInfo struct {
	UpdateAssetInfo *UpdateAssetInfoTransactionData `protobuf:"bytes,117,opt,name=update_asset_info,json=updateAssetInfo,proto3,oneof"`
}

type Transaction_InvokeExpression struct {
	InvokeExpression *InvokeExpressionTransactionData `protobuf:"bytes,119,opt,name=invoke_expression,json=invokeExpression,proto3,oneof"`
}

func (*Transaction_Genesis) isTransaction_Data() {}

func (*Transaction_Payment) isTransaction_Data() {}

func (*Transaction_Issue) isTransaction_Data() {}

func (*Transaction_Transfer) isTransaction_Data() {}

func (*Transaction_Reissue) isTransaction_Data() {}

func (*Transaction_Burn) isTransaction_Data() {}

func (*Transaction_Exchange) isTransaction_Data() {}

func (*Transaction_Lease) isTransaction_Data() {}

func (*Transaction_LeaseCancel) isTransaction_Data() {}

func (*Transaction_CreateAlias) isTransaction_Data() {}

func (*Transaction_MassTransfer) isTransaction_Data() {}

func (*Transaction_DataTransaction) isTransaction_Data() {}

func (*Transaction_SetScript) isTransaction_Data() {}

func (*Transaction_SponsorFee) isTransaction_Data() {}

func (*Transaction_SetAssetScript) isTransaction_Data() {}

func (*Transaction_InvokeScript) isTransaction_Data() {}

func (*Transaction_UpdateAssetInfo) isTransaction_Data() {}

func (*Transaction_InvokeExpression) isTransaction_Data() {}

type GenesisTransactionData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecipientAddress []byte                 `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenesisTransactionData) Reset() {
	*x = GenesisTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisTransactionData) ProtoMessage() {}

func (x *GenesisTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisTransactionData.ProtoReflect.Descriptor instead.
func (*GenesisTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *GenesisTransactionData) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *GenesisTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentTransactionData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecipientAddress []byte                 `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PaymentTransactionData) Reset() {
	*x = PaymentTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTransactionData) ProtoMessage() {}

func (x *PaymentTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTransactionData.ProtoReflect.Descriptor instead.
func (*PaymentTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentTransactionData) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *PaymentTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TransferTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     *Recipient             `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount        *Amount                `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Attachment    []byte                 `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferTransactionData) Reset() {
	*x = TransferTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTransactionData) ProtoMessage() {}

func (x *TransferTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTransactionData.ProtoReflect.Descriptor instead.
func (*TransferTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransferTransactionData) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *TransferTransactionData) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransferTransactionData) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type CreateAliasTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alias         string                 `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAliasTransactionData) Reset() {
	*x = CreateAliasTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAliasTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAliasTransactionData) ProtoMessage() {}

func (x *CreateAliasTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAliasTransactionData.ProtoReflect.Descriptor instead.
func (*CreateAliasTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAliasTransactionData) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type DataEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*DataEntry_IntValue
	//	*DataEntry_BoolValue
	//	*DataEntry_BinaryValue
	//	*DataEntry_StringValue
	Value         isDataEntry_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataEntry) Reset() {
	*x = DataEntry{}
	mi := &file_waves_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataEntry) ProtoMessage() {}

func (x *DataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataEntry.ProtoReflect.Descriptor instead.
func (*DataEntry) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *DataEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DataEntry) GetValue() isDataEntry_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataEntry) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*DataEntry_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *DataEntry) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*DataEntry_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *DataEntry) GetBinaryValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*DataEntry_BinaryValue); ok {
			return x.BinaryValue
		}
	}
	return nil
}

func (x *DataEntry) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*DataEntry_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

type isDataEntry_Value interface {
	isDataEntry_Value()
}

type DataEntry_IntValue struct {
	IntValue int64 `protobuf:"varint,10,opt,name=int_value,json=intValue,proto3,oneof"`
}

type DataEntry_BoolValue struct {
	BoolValue bool `protobuf:"varint,11,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type DataEntry_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,12,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

type DataEntry_StringValue struct {
	StringValue string `protobuf:"bytes,13,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*DataEntry_IntValue) isDataEntry_Value() {}

func (*DataEntry_BoolValue) isDataEntry_Value() {}

func (*DataEntry_BinaryValue) isDataEntry_Value() {}

func (*DataEntry_StringValue) isDataEntry_Value() {}

type DataTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*DataEntry           `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTransactionData) Reset() {
	*x = DataTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransactionData) ProtoMessage() {}

func (x *DataTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransactionData.ProtoReflect.Descriptor instead.
func (*DataTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *DataTransactionData) GetData() []*DataEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

type MassTransferTransactionData struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	AssetId       []byte                                  `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Transfers     []*MassTransferTransactionData_Transfer `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Attachment    []byte                                  `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MassTransferTransactionData) Reset() {
	*x = MassTransferTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MassTransferTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassTransferTransactionData) ProtoMessage() {}

func (x *MassTransferTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassTransferTransactionData.ProtoReflect.Descriptor instead.
func (*MassTransferTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *MassTransferTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *MassTransferTransactionData) GetTransfers() []*MassTransferTransactionData_Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *MassTransferTransactionData) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type LeaseTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     *Recipient             `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseTransactionData) Reset() {
	*x = LeaseTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseTransactionData) ProtoMessage() {}

func (x *LeaseTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseTransactionData.ProtoReflect.Descriptor instead.
func (*LeaseTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *LeaseTransactionData) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *LeaseTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type LeaseCancelTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaseId       []byte                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseCancelTransactionData) Reset() {
	*x = LeaseCancelTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseCancelTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseCancelTransactionData) ProtoMessage() {}

func (x *LeaseCancelTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseCancelTransactionData.ProtoReflect.Descriptor instead.
func (*LeaseCancelTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *LeaseCancelTransactionData) GetLeaseId() []byte {
	if x != nil {
		return x.LeaseId
	}
	return nil
}

type BurnTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetAmount   *Amount                `protobuf:"bytes,1,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BurnTransactionData) Reset() {
	*x = BurnTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BurnTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnTransactionData) ProtoMessage() {}

func (x *BurnTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnTransactionData.ProtoReflect.Descriptor instead.
func (*BurnTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *BurnTransactionData) GetAssetAmount() *Amount {
	if x != nil {
		return x.AssetAmount
	}
	return nil
}

type IssueTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals      int32                  `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Reissuable    bool                   `protobuf:"varint,5,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	Script        []byte                 `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueTransactionData) Reset() {
	*x = IssueTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTransactionData) ProtoMessage() {}

func (x *IssueTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTransactionData.ProtoReflect.Descriptor instead.
func (*IssueTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *IssueTransactionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IssueTransactionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IssueTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IssueTransactionData) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *IssueTransactionData) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

func (x *IssueTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type ReissueTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetAmount   *Amount                `protobuf:"bytes,1,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"`
	Reissuable    bool                   `protobuf:"varint,2,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReissueTransactionData) Reset() {
	*x = ReissueTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReissueTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReissueTransactionData) ProtoMessage() {}

func (x *ReissueTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReissueTransactionData.ProtoReflect.Descriptor instead.
func (*ReissueTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *ReissueTransactionData) GetAssetAmount() *Amount {
	if x != nil {
		return x.AssetAmount
	}
	return nil
}

func (x *ReissueTransactionData) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

type SetAssetScriptTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       []byte                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Script        []byte                 `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAssetScriptTransactionData) Reset() {
	*x = SetAssetScriptTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAssetScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAssetScriptTransactionData) ProtoMessage() {}

func (x *SetAssetScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAssetScriptTransactionData.ProtoReflect.Descriptor instead.
func (*SetAssetScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *SetAssetScriptTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *SetAssetScriptTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type SetScriptTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        []byte                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetScriptTransactionData) Reset() {
	*x = SetScriptTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScriptTransactionData) ProtoMessage() {}

func (x *SetScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScriptTransactionData.ProtoReflect.Descriptor instead.
func (*SetScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *SetScriptTransactionData) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

type ExchangeTransactionData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Amount         int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Price          int64                  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	BuyMatcherFee  int64                  `protobuf:"varint,3,opt,name=buy_matcher_fee,json=buyMatcherFee,proto3" json:"buy_matcher_fee,omitempty"`
	SellMatcherFee int64                  `protobuf:"varint,4,opt,name=sell_matcher_fee,json=sellMatcherFee,proto3" json:"sell_matcher_fee,omitempty"`
	Orders         []*Order               `protobuf:"bytes,5,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExchangeTransactionData) Reset() {
	*x = ExchangeTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeTransactionData) ProtoMessage() {}

func (x *ExchangeTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeTransactionData.ProtoReflect.Descriptor instead.
func (*ExchangeTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *ExchangeTransactionData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExchangeTransactionData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ExchangeTransactionData) GetBuyMatcherFee() int64 {
	if x != nil {
		return x.BuyMatcherFee
	}
	return 0
}

func (x *ExchangeTransactionData) GetSellMatcherFee() int64 {
	if x != nil {
		return x.SellMatcherFee
	}
	return 0
}

func (x *ExchangeTransactionData) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type SponsorFeeTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinFee        *Amount                `protobuf:"bytes,1,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SponsorFeeTransactionData) Reset() {
	*x = SponsorFeeTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SponsorFeeTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorFeeTransactionData) ProtoMessage() {}

func (x *SponsorFeeTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorFeeTransactionData.ProtoReflect.Descriptor instead.
func (*SponsorFeeTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *SponsorFeeTransactionData) GetMinFee() *Amount {
	if x != nil {
		return x.MinFee
	}
	return nil
}

type InvokeScriptTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DApp          *Recipient             `protobuf:"bytes,1,opt,name=d_app,json=dApp,proto3" json:"d_app,omitempty"`
	FunctionCall  []byte                 `protobuf:"bytes,2,opt,name=function_call,json=functionCall,proto3" json:"function_call,omitempty"`
	Payments      []*Amount              `protobuf:"bytes,3,rep,name=payments,proto3" json:"payments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeScriptTransactionData) Reset() {
	*x = InvokeScriptTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeScriptTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScriptTransactionData) ProtoMessage() {}

func (x *InvokeScriptTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScriptTransactionData.ProtoReflect.Descriptor instead.
func (*InvokeScriptTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *InvokeScriptTransactionData) GetDApp() *Recipient {
	if x != nil {
		return x.DApp
	}
	return nil
}

func (x *InvokeScriptTransactionData) GetFunctionCall() []byte {
	if x != nil {
		return x.FunctionCall
	}
	return nil
}

func (x *InvokeScriptTransactionData) GetPayments() []*Amount {
	if x != nil {
		return x.Payments
	}
	return nil
}

type UpdateAssetInfoTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       []byte                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAssetInfoTransactionData) Reset() {
	*x = UpdateAssetInfoTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAssetInfoTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetInfoTransactionData) ProtoMessage() {}

func (x *UpdateAssetInfoTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetInfoTransactionData.ProtoReflect.Descriptor instead.
func (*UpdateAssetInfoTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAssetInfoTransactionData) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *UpdateAssetInfoTransactionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAssetInfoTransactionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type InvokeExpressionTransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    []byte                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeExpressionTransactionData) Reset() {
	*x = InvokeExpressionTransactionData{}
	mi := &file_waves_transaction_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeExpressionTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeExpressionTransactionData) ProtoMessage() {}

func (x *InvokeExpressionTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeExpressionTransactionData.ProtoReflect.Descriptor instead.
func (*InvokeExpressionTransactionData) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *InvokeExpressionTransactionData) GetExpression() []byte {
	if x != nil {
		return x.Expression
	}
	return nil
}

type MassTransferTransactionData_Transfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     *Recipient             `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MassTransferTransactionData_Transfer) Reset() {
	*x = MassTransferTransactionData_Transfer{}
	mi := &file_waves_transaction_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MassTransferTransactionData_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MassTransferTransactionData_Transfer) ProtoMessage() {}

func (x *MassTransferTransactionData_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_waves_transaction_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MassTransferTransactionData_Transfer.ProtoReflect.Descriptor instead.
func (*MassTransferTransactionData_Transfer) Descriptor() ([]byte, []int) {
	return file_waves_transaction_proto_rawDescGZIP(), []int{8, 0}
}

func (x *MassTransferTransactionData_Transfer) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *MassTransferTransactionData_Transfer) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_waves_transaction_proto protoreflect.FileDescriptor

const file_waves_transaction_proto_rawDesc = "" +
	"\n" +
	"\x17waves/transaction.proto\x12\x05waves\x1a\x12waves/amount.proto\x1a\x15waves/recipient.proto\x1a\x11waves/order.proto\"\xb2\x01\n" +
	"\x11SignedTransaction\x12A\n" +
	"\x11waves_transaction\x18\x01 \x01(\v2\x12.waves.TransactionH\x00R\x10wavesTransaction\x123\n" +
	"\x14ethereum_transaction\x18\x03 \x01(\fH\x00R\x13ethereumTransaction\x12\x16\n" +
	"\x06proofs\x18\x02 \x03(\fR\x06proofsB\r\n" +
	"\vtransaction\"\xf2\n" +
	"\n" +
	"\vTransaction\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x05R\achainId\x12*\n" +
	"\x11sender_public_key\x18\x02 \x01(\fR\x0fsenderPublicKey\x12\x1f\n" +
	"\x03fee\x18\x03 \x01(\v2\r.waves.AmountR\x03fee\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x05R\aversion\x129\n" +
	"\agenesis\x18e \x01(\v2\x1d.waves.GenesisTransactionDataH\x00R\agenesis\x129\n" +
	"\apayment\x18f \x01(\v2\x1d.waves.PaymentTransactionDataH\x00R\apayment\x123\n" +
	"\x05issue\x18g \x01(\v2\x1b.waves.IssueTransactionDataH\x00R\x05issue\x12<\n" +
	"\btransfer\x18h \x01(\v2\x1e.waves.TransferTransactionDataH\x00R\btransfer\x129\n" +
	"\areissue\x18i \x01(\v2\x1d.waves.ReissueTransactionDataH\x00R\areissue\x120\n" +
	"\x04burn\x18j \x01(\v2\x1a.waves.BurnTransactionDataH\x00R\x04burn\x12<\n" +
	"\bexchange\x18k \x01(\v2\x1e.waves.ExchangeTransactionDataH\x00R\bexchange\x123\n" +
	"\x05lease\x18l \x01(\v2\x1b.waves.LeaseTransactionDataH\x00R\x05lease\x12F\n" +
	"\flease_cancel\x18m \x01(\v2!.waves.LeaseCancelTransactionDataH\x00R\vleaseCancel\x12F\n" +
	"\fcreate_alias\x18n \x01(\v2!.waves.CreateAliasTransactionDataH\x00R\vcreateAlias\x12I\n" +
	"\rmass_transfer\x18o \x01(\v2\".waves.MassTransferTransactionDataH\x00R\fmassTransfer\x12G\n" +
	"\x10data_transaction\x18p \x01(\v2\x1a.waves.DataTransactionDataH\x00R\x0fdataTransaction\x12@\n" +
	"\n" +
	"set_script\x18q \x01(\v2\x1f.waves.SetScriptTransactionDataH\x00R\tsetScript\x12C\n" +
	"\vsponsor_fee\x18r \x01(\v2 .waves.SponsorFeeTransactionDataH\x00R\n" +
	"sponsorFee\x12P\n" +
	"\x10set_asset_script\x18s \x01(\v2$.waves.SetAssetScriptTransactionDataH\x00R\x0esetAssetScript\x12I\n" +
	"\rinvoke_script\x18t \x01(\v2\".waves.InvokeScriptTransactionDataH\x00R\finvokeScript\x12S\n" +
	"\x11update_asset_info\x18u \x01(\v2%.waves.UpdateAssetInfoTransactionDataH\x00R\x0fupdateAssetInfo\x12U\n" +
	"\x11invoke_expression\x18w \x01(\v2&.waves.InvokeExpressionTransactionDataH\x00R\x10invokeExpressionB\x06\n" +
	"\x04data\"]\n" +
	"\x16GenesisTransactionData\x12+\n" +
	"\x11recipient_address\x18\x01 \x01(\fR\x10recipientAddress\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"]\n" +
	"\x16PaymentTransactionData\x12+\n" +
	"\x11recipient_address\x18\x01 \x01(\fR\x10recipientAddress\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"\x90\x01\n" +
	"\x17TransferTransactionData\x12.\n" +
	"\trecipient\x18\x01 \x01(\v2\x10.waves.RecipientR\trecipient\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.waves.AmountR\x06amount\x12\x1e\n" +
	"\n" +
	"attachment\x18\x03 \x01(\fR\n" +
	"attachment\"2\n" +
	"\x1aCreateAliasTransactionData\x12\x14\n" +
	"\x05alias\x18\x01 \x01(\tR\x05alias\"\xb0\x01\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1d\n" +
	"\tint_value\x18\n" +
	" \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\v \x01(\bH\x00R\tboolValue\x12#\n" +
	"\fbinary_value\x18\f \x01(\fH\x00R\vbinaryValue\x12#\n" +
	"\fstring_value\x18\r \x01(\tH\x00R\vstringValueB\a\n" +
	"\x05value\";\n" +
	"\x13DataTransactionData\x12$\n" +
	"\x04data\x18\x01 \x03(\v2\x10.waves.DataEntryR\x04data\"\xf7\x01\n" +
	"\x1bMassTransferTransactionData\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\fR\aassetId\x12I\n" +
	"\ttransfers\x18\x02 \x03(\v2+.waves.MassTransferTransactionData.TransferR\ttransfers\x12\x1e\n" +
	"\n" +
	"attachment\x18\x03 \x01(\fR\n" +
	"attachment\x1aR\n" +
	"\bTransfer\x12.\n" +
	"\trecipient\x18\x01 \x01(\v2\x10.waves.RecipientR\trecipient\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"^\n" +
	"\x14LeaseTransactionData\x12.\n" +
	"\trecipient\x18\x01 \x01(\v2\x10.waves.RecipientR\trecipient\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"7\n" +
	"\x1aLeaseCancelTransactionData\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\fR\aleaseId\"G\n" +
	"\x13BurnTransactionData\x120\n" +
	"\fasset_amount\x18\x01 \x01(\v2\r.waves.AmountR\vassetAmount\"\xb8\x01\n" +
	"\x14IssueTransactionData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\x1a\n" +
	"\bdecimals\x18\x04 \x01(\x05R\bdecimals\x12\x1e\n" +
	"\n" +
	"reissuable\x18\x05 \x01(\bR\n" +
	"reissuable\x12\x16\n" +
	"\x06script\x18\x06 \x01(\fR\x06script\"j\n" +
	"\x16ReissueTransactionData\x120\n" +
	"\fasset_amount\x18\x01 \x01(\v2\r.waves.AmountR\vassetAmount\x12\x1e\n" +
	"\n" +
	"reissuable\x18\x02 \x01(\bR\n" +
	"reissuable\"R\n" +
	"\x1dSetAssetScriptTransactionData\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\fR\aassetId\x12\x16\n" +
	"\x06script\x18\x02 \x01(\fR\x06script\"2\n" +
	"\x18SetScriptTransactionData\x12\x16\n" +
	"\x06script\x18\x01 \x01(\fR\x06script\"\xbf\x01\n" +
	"\x17ExchangeTransactionData\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x03R\x05price\x12&\n" +
	"\x0fbuy_matcher_fee\x18\x03 \x01(\x03R\rbuyMatcherFee\x12(\n" +
	"\x10sell_matcher_fee\x18\x04 \x01(\x03R\x0esellMatcherFee\x12$\n" +
	"\x06orders\x18\x05 \x03(\v2\f.waves.OrderR\x06orders\"C\n" +
	"\x19SponsorFeeTransactionData\x12&\n" +
	"\amin_fee\x18\x01 \x01(\v2\r.waves.AmountR\x06minFee\"\x94\x01\n" +
	"\x1bInvokeScriptTransactionData\x12%\n" +
	"\x05d_app\x18\x01 \x01(\v2\x10.waves.RecipientR\x04dApp\x12#\n" +
	"\rfunction_call\x18\x02 \x01(\fR\ffunctionCall\x12)\n" +
	"\bpayments\x18\x03 \x03(\v2\r.waves.AmountR\bpayments\"q\n" +
	"\x1eUpdateAssetInfoTransactionData\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\fR\aassetId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"A\n" +
	"\x1fInvokeExpressionTransactionData\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\fR\n" +
	"expressionBk\n" +
	"&com.wavesplatform.protobuf.transactionZ9github.com/wavesplatform/gowaves/pkg/grpc/generated/waves\xaa\x02\x05Wavesb\x06proto3"

var (
	file_waves_transaction_proto_rawDescOnce sync.Once
	file_waves_transaction_proto_rawDescData []byte
)

func file_waves_transaction_proto_rawDescGZIP() []byte {
	file_waves_transaction_proto_rawDescOnce.Do(func() {
		file_waves_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waves_transaction_proto_rawDesc), len(file_waves_transaction_proto_rawDesc)))
	})
	return file_waves_transaction_proto_rawDescData
}

var file_waves_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_waves_transaction_proto_goTypes = []any{
	(*SignedTransaction)(nil),                    // 0: waves.SignedTransaction
	(*Transaction)(nil),                          // 1: waves.Transaction
	(*GenesisTransactionData)(nil),               // 2: waves.GenesisTransactionData
	(*PaymentTransactionData)(nil),               // 3: waves.PaymentTransactionData
	(*TransferTransactionData)(nil),              // 4: waves.TransferTransactionData
	(*CreateAliasTransactionData)(nil),           // 5: waves.CreateAliasTransactionData
	(*DataEntry)(nil),                            // 6: waves.DataEntry
	(*DataTransactionData)(nil),                  // 7: waves.DataTransactionData
	(*MassTransferTransactionData)(nil),          // 8: waves.MassTransferTransactionData
	(*LeaseTransactionData)(nil),                 // 9: waves.LeaseTransactionData
	(*LeaseCancelTransactionData)(nil),           // 10: waves.LeaseCancelTransactionData
	(*BurnTransactionData)(nil),                  // 11: waves.BurnTransactionData
	(*IssueTransactionData)(nil),                 // 12: waves.IssueTransactionData
	(*ReissueTransactionData)(nil),               // 13: waves.ReissueTransactionData
	(*SetAssetScriptTransactionData)(nil),        // 14: waves.SetAssetScriptTransactionData
	(*SetScriptTransactionData)(nil),             // 15: waves.SetScriptTransactionData
	(*ExchangeTransactionData)(nil),              // 16: waves.ExchangeTransactionData
	(*SponsorFeeTransactionData)(nil),            // 17: waves.SponsorFeeTransactionData
	(*InvokeScriptTransactionData)(nil),          // 18: waves.InvokeScriptTransactionData
	(*UpdateAssetInfoTransactionData)(nil),       // 19: waves.UpdateAssetInfoTransactionData
	(*InvokeExpressionTransactionData)(nil),      // 20: waves.InvokeExpressionTransactionData
	(*MassTransferTransactionData_Transfer)(nil), // 21: waves.MassTransferTransactionData.Transfer
	(*Amount)(nil),                               // 22: waves.Amount
	(*Recipient)(nil),                            // 23: waves.Recipient
	(*Order)(nil),                                // 24: waves.Order
}
var file_waves_transaction_proto_depIdxs = []int32{
	1,  // 0: waves.SignedTransaction.waves_transaction:type_name -> waves.Transaction
	22, // 1: waves.Transaction.fee:type_name -> waves.Amount
	2,  // 2: waves.Transaction.genesis:type_name -> waves.GenesisTransactionData
	3,  // 3: waves.Transaction.payment:type_name -> waves.PaymentTransactionData
	12, // 4: waves.Transaction.issue:type_name -> waves.IssueTransactionData
	4,  // 5: waves.Transaction.transfer:type_name -> waves.TransferTransactionData
	13, // 6: waves.Transaction.reissue:type_name -> waves.ReissueTransactionData
	11, // 7: waves.Transaction.burn:type_name -> waves.BurnTransactionData
	16, // 8: waves.Transaction.exchange:type_name -> waves.ExchangeTransactionData
	9,  // 9: waves.Transaction.lease:type_name -> waves.LeaseTransactionData
	10, // 10: waves.Transaction.lease_cancel:type_name -> waves.LeaseCancelTransactionData
	5,  // 11: waves.Transaction.create_alias:type_name -> waves.CreateAliasTransactionData
	8,  // 12: waves.Transaction.mass_transfer:type_name -> waves.MassTransferTransactionData
	7,  // 13: waves.Transaction.data_transaction:type_name -> waves.DataTransactionData
	15, // 14: waves.Transaction.set_script:type_name -> waves.SetScriptTransactionData
	17, // 15: waves.Transaction.sponsor_fee:type_name -> waves.SponsorFeeTransactionData
	14, // 16: waves.Transaction.set_asset_script:type_name -> waves.SetAssetScriptTransactionData
	18, // 17: waves.Transaction.invoke_script:type_name -> waves.InvokeScriptTransactionData
	19, // 18: waves.Transaction.update_asset_info:type_name -> waves.UpdateAssetInfoTransactionData
	20, // 19: waves.Transaction.invoke_expression:type_name -> waves.InvokeExpressionTransactionData
	23, // 20: waves.TransferTransactionData.recipient:type_name -> waves.Recipient
	22, // 21: waves.TransferTransactionData.amount:type_name -> waves.Amount
	6,  // 22: waves.DataTransactionData.data:type_name -> waves.DataEntry
	21, // 23: waves.MassTransferTransactionData.transfers:type_name -> waves.MassTransferTransactionData.Transfer
	23, // 24: waves.LeaseTransactionData.recipient:type_name -> waves.Recipient
	22, // 25: waves.BurnTransactionData.asset_amount:type_name -> waves.Amount
	22, // 26: waves.ReissueTransactionData.asset_amount:type_name -> waves.Amount
	24, // 27: waves.ExchangeTransactionData.orders:type_name -> waves.Order
	22, // 28: waves.SponsorFeeTransactionData.min_fee:type_name -> waves.Amount
	23, // 29: waves.InvokeScriptTransactionData.d_app:type_name -> waves.Recipient
	22, // 30: waves.InvokeScriptTransactionData.payments:type_name -> waves.Amount
	23, // 31: waves.MassTransferTransactionData.Transfer.recipient:type_name -> waves.Recipient
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_waves_transaction_proto_init() }
func file_waves_transaction_proto_init() {
	if File_waves_transaction_proto != nil {
		return
	}
	file_waves_amount_proto_init()
	file_waves_recipient_proto_init()
	file_waves_order_proto_init()
	file_waves_transaction_proto_msgTypes[0].OneofWrappers = []any{
		(*SignedTransaction_WavesTransaction)(nil),
		(*SignedTransaction_EthereumTransaction)(nil),
	}
	file_waves_transaction_proto_msgTypes[1].OneofWrappers = []any{
		(*Transaction_Genesis)(nil),
		(*Transaction_Payment)(nil),
		(*Transaction_Issue)(nil),
		(*Transaction_Transfer)(nil),
		(*Transaction_Reissue)(nil),
		(*Transaction_Burn)(nil),
		(*Transaction_Exchange)(nil),
		(*Transaction_Lease)(nil),
		(*Transaction_LeaseCancel)(nil),
		(*Transaction_CreateAlias)(nil),
		(*Transaction_MassTransfer)(nil),
		(*Transaction_DataTransaction)(nil),
		(*Transaction_SetScript)(nil),
		(*Transaction_SponsorFee)(nil),
		(*Transaction_SetAssetScript)(nil),
		(*Transaction_InvokeScript)(nil),
		(*Transaction_UpdateAssetInfo)(nil),
		(*Transaction_InvokeExpression)(nil),
	}
	file_waves_transaction_proto_msgTypes[6].OneofWrappers = []any{
		(*DataEntry_IntValue)(nil),
		(*DataEntry_BoolValue)(nil),
		(*DataEntry_BinaryValue)(nil),
		(*DataEntry_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waves_transaction_proto_rawDesc), len(file_waves_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_transaction_proto_goTypes,
		DependencyIndexes: file_waves_transaction_proto_depIdxs,
		MessageInfos:      file_waves_transaction_proto_msgTypes,
	}.Build()
	File_waves_transaction_proto = out.File
	file_waves_transaction_proto_goTypes = nil
	file_waves_transaction_proto_depIdxs = nil
}
