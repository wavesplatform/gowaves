// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: waves/state_snapshot.proto

package waves

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockSnapshot struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	BlockId       []byte                      `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Snapshots     []*TransactionStateSnapshot `protobuf:"bytes,2,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockSnapshot) Reset() {
	*x = BlockSnapshot{}
	mi := &file_waves_state_snapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSnapshot) ProtoMessage() {}

func (x *BlockSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_waves_state_snapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockSnapshot.ProtoReflect.Descriptor instead.
func (*BlockSnapshot) Descriptor() ([]byte, []int) {
	return file_waves_state_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *BlockSnapshot) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *BlockSnapshot) GetSnapshots() []*TransactionStateSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type MicroBlockSnapshot struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	TotalBlockId  []byte                      `protobuf:"bytes,1,opt,name=total_block_id,json=totalBlockId,proto3" json:"total_block_id,omitempty"`
	Snapshots     []*TransactionStateSnapshot `protobuf:"bytes,2,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MicroBlockSnapshot) Reset() {
	*x = MicroBlockSnapshot{}
	mi := &file_waves_state_snapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MicroBlockSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroBlockSnapshot) ProtoMessage() {}

func (x *MicroBlockSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_waves_state_snapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroBlockSnapshot.ProtoReflect.Descriptor instead.
func (*MicroBlockSnapshot) Descriptor() ([]byte, []int) {
	return file_waves_state_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *MicroBlockSnapshot) GetTotalBlockId() []byte {
	if x != nil {
		return x.TotalBlockId
	}
	return nil
}

func (x *MicroBlockSnapshot) GetSnapshots() []*TransactionStateSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_waves_state_snapshot_proto protoreflect.FileDescriptor

const file_waves_state_snapshot_proto_rawDesc = "" +
	"\n" +
	"\x1awaves/state_snapshot.proto\x12\x05waves\x1a&waves/transaction_state_snapshot.proto\"i\n" +
	"\rBlockSnapshot\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\fR\ablockId\x12=\n" +
	"\tsnapshots\x18\x02 \x03(\v2\x1f.waves.TransactionStateSnapshotR\tsnapshots\"y\n" +
	"\x12MicroBlockSnapshot\x12$\n" +
	"\x0etotal_block_id\x18\x01 \x01(\fR\ftotalBlockId\x12=\n" +
	"\tsnapshots\x18\x02 \x03(\v2\x1f.waves.TransactionStateSnapshotR\tsnapshotsBh\n" +
	"#com.wavesplatform.protobuf.snapshotZ9github.com/wavesplatform/gowaves/pkg/grpc/generated/waves\xaa\x02\x05Wavesb\x06proto3"

var (
	file_waves_state_snapshot_proto_rawDescOnce sync.Once
	file_waves_state_snapshot_proto_rawDescData []byte
)

func file_waves_state_snapshot_proto_rawDescGZIP() []byte {
	file_waves_state_snapshot_proto_rawDescOnce.Do(func() {
		file_waves_state_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waves_state_snapshot_proto_rawDesc), len(file_waves_state_snapshot_proto_rawDesc)))
	})
	return file_waves_state_snapshot_proto_rawDescData
}

var file_waves_state_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_waves_state_snapshot_proto_goTypes = []any{
	(*BlockSnapshot)(nil),            // 0: waves.BlockSnapshot
	(*MicroBlockSnapshot)(nil),       // 1: waves.MicroBlockSnapshot
	(*TransactionStateSnapshot)(nil), // 2: waves.TransactionStateSnapshot
}
var file_waves_state_snapshot_proto_depIdxs = []int32{
	2, // 0: waves.BlockSnapshot.snapshots:type_name -> waves.TransactionStateSnapshot
	2, // 1: waves.MicroBlockSnapshot.snapshots:type_name -> waves.TransactionStateSnapshot
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_waves_state_snapshot_proto_init() }
func file_waves_state_snapshot_proto_init() {
	if File_waves_state_snapshot_proto != nil {
		return
	}
	file_waves_transaction_state_snapshot_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waves_state_snapshot_proto_rawDesc), len(file_waves_state_snapshot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_state_snapshot_proto_goTypes,
		DependencyIndexes: file_waves_state_snapshot_proto_depIdxs,
		MessageInfos:      file_waves_state_snapshot_proto_msgTypes,
	}.Build()
	File_waves_state_snapshot_proto = out.File
	file_waves_state_snapshot_proto_goTypes = nil
	file_waves_state_snapshot_proto_depIdxs = nil
}
