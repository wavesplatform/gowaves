// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: waves/events/events.proto

package events

import (
	waves "github.com/wavesplatform/gowaves/pkg/grpc/generated/waves"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockchainUpdated_Rollback_RollbackType int32

const (
	BlockchainUpdated_Rollback_BLOCK      BlockchainUpdated_Rollback_RollbackType = 0
	BlockchainUpdated_Rollback_MICROBLOCK BlockchainUpdated_Rollback_RollbackType = 1
)

// Enum value maps for BlockchainUpdated_Rollback_RollbackType.
var (
	BlockchainUpdated_Rollback_RollbackType_name = map[int32]string{
		0: "BLOCK",
		1: "MICROBLOCK",
	}
	BlockchainUpdated_Rollback_RollbackType_value = map[string]int32{
		"BLOCK":      0,
		"MICROBLOCK": 1,
	}
)

func (x BlockchainUpdated_Rollback_RollbackType) Enum() *BlockchainUpdated_Rollback_RollbackType {
	p := new(BlockchainUpdated_Rollback_RollbackType)
	*p = x
	return p
}

func (x BlockchainUpdated_Rollback_RollbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockchainUpdated_Rollback_RollbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_events_events_proto_enumTypes[0].Descriptor()
}

func (BlockchainUpdated_Rollback_RollbackType) Type() protoreflect.EnumType {
	return &file_waves_events_events_proto_enumTypes[0]
}

func (x BlockchainUpdated_Rollback_RollbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockchainUpdated_Rollback_RollbackType.Descriptor instead.
func (BlockchainUpdated_Rollback_RollbackType) EnumDescriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 1, 0}
}

type StateUpdate_LeaseUpdate_LeaseStatus int32

const (
	StateUpdate_LeaseUpdate_INACTIVE StateUpdate_LeaseUpdate_LeaseStatus = 0
	StateUpdate_LeaseUpdate_ACTIVE   StateUpdate_LeaseUpdate_LeaseStatus = 1
)

// Enum value maps for StateUpdate_LeaseUpdate_LeaseStatus.
var (
	StateUpdate_LeaseUpdate_LeaseStatus_name = map[int32]string{
		0: "INACTIVE",
		1: "ACTIVE",
	}
	StateUpdate_LeaseUpdate_LeaseStatus_value = map[string]int32{
		"INACTIVE": 0,
		"ACTIVE":   1,
	}
)

func (x StateUpdate_LeaseUpdate_LeaseStatus) Enum() *StateUpdate_LeaseUpdate_LeaseStatus {
	p := new(StateUpdate_LeaseUpdate_LeaseStatus)
	*p = x
	return p
}

func (x StateUpdate_LeaseUpdate_LeaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateUpdate_LeaseUpdate_LeaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_events_events_proto_enumTypes[1].Descriptor()
}

func (StateUpdate_LeaseUpdate_LeaseStatus) Type() protoreflect.EnumType {
	return &file_waves_events_events_proto_enumTypes[1]
}

func (x StateUpdate_LeaseUpdate_LeaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateUpdate_LeaseUpdate_LeaseStatus.Descriptor instead.
func (StateUpdate_LeaseUpdate_LeaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 2, 0}
}

type BlockchainUpdated struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Height int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Types that are valid to be assigned to Update:
	//
	//	*BlockchainUpdated_Append_
	//	*BlockchainUpdated_Rollback_
	Update           isBlockchainUpdated_Update `protobuf_oneof:"update"`
	ReferencedAssets []*StateUpdate_AssetInfo   `protobuf:"bytes,21,rep,name=referenced_assets,json=referencedAssets,proto3" json:"referenced_assets,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockchainUpdated) Reset() {
	*x = BlockchainUpdated{}
	mi := &file_waves_events_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockchainUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated) ProtoMessage() {}

func (x *BlockchainUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainUpdated) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BlockchainUpdated) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockchainUpdated) GetUpdate() isBlockchainUpdated_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *BlockchainUpdated) GetAppend() *BlockchainUpdated_Append {
	if x != nil {
		if x, ok := x.Update.(*BlockchainUpdated_Append_); ok {
			return x.Append
		}
	}
	return nil
}

func (x *BlockchainUpdated) GetRollback() *BlockchainUpdated_Rollback {
	if x != nil {
		if x, ok := x.Update.(*BlockchainUpdated_Rollback_); ok {
			return x.Rollback
		}
	}
	return nil
}

func (x *BlockchainUpdated) GetReferencedAssets() []*StateUpdate_AssetInfo {
	if x != nil {
		return x.ReferencedAssets
	}
	return nil
}

type isBlockchainUpdated_Update interface {
	isBlockchainUpdated_Update()
}

type BlockchainUpdated_Append_ struct {
	Append *BlockchainUpdated_Append `protobuf:"bytes,11,opt,name=append,proto3,oneof"`
}

type BlockchainUpdated_Rollback_ struct {
	Rollback *BlockchainUpdated_Rollback `protobuf:"bytes,12,opt,name=rollback,proto3,oneof"`
}

func (*BlockchainUpdated_Append_) isBlockchainUpdated_Update() {}

func (*BlockchainUpdated_Rollback_) isBlockchainUpdated_Update() {}

type StateUpdate struct {
	state             protoimpl.MessageState          `protogen:"open.v1"`
	Balances          []*StateUpdate_BalanceUpdate    `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	LeasingForAddress []*StateUpdate_LeasingUpdate    `protobuf:"bytes,2,rep,name=leasing_for_address,json=leasingForAddress,proto3" json:"leasing_for_address,omitempty"`
	DataEntries       []*StateUpdate_DataEntryUpdate  `protobuf:"bytes,3,rep,name=data_entries,json=dataEntries,proto3" json:"data_entries,omitempty"`
	Assets            []*StateUpdate_AssetStateUpdate `protobuf:"bytes,4,rep,name=assets,proto3" json:"assets,omitempty"`
	IndividualLeases  []*StateUpdate_LeaseUpdate      `protobuf:"bytes,5,rep,name=individual_leases,json=individualLeases,proto3" json:"individual_leases,omitempty"`
	Scripts           []*StateUpdate_ScriptUpdate     `protobuf:"bytes,6,rep,name=scripts,proto3" json:"scripts,omitempty"`
	DeletedAliases    []string                        `protobuf:"bytes,7,rep,name=deleted_aliases,json=deletedAliases,proto3" json:"deleted_aliases,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *StateUpdate) GetBalances() []*StateUpdate_BalanceUpdate {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *StateUpdate) GetLeasingForAddress() []*StateUpdate_LeasingUpdate {
	if x != nil {
		return x.LeasingForAddress
	}
	return nil
}

func (x *StateUpdate) GetDataEntries() []*StateUpdate_DataEntryUpdate {
	if x != nil {
		return x.DataEntries
	}
	return nil
}

func (x *StateUpdate) GetAssets() []*StateUpdate_AssetStateUpdate {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *StateUpdate) GetIndividualLeases() []*StateUpdate_LeaseUpdate {
	if x != nil {
		return x.IndividualLeases
	}
	return nil
}

func (x *StateUpdate) GetScripts() []*StateUpdate_ScriptUpdate {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *StateUpdate) GetDeletedAliases() []string {
	if x != nil {
		return x.DeletedAliases
	}
	return nil
}

type TransactionMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderAddress []byte                 `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// Types that are valid to be assigned to Metadata:
	//
	//	*TransactionMetadata_Transfer
	//	*TransactionMetadata_Exchange
	//	*TransactionMetadata_MassTransfer
	//	*TransactionMetadata_InvokeScript
	//	*TransactionMetadata_Lease
	//	*TransactionMetadata_Ethereum
	Metadata      isTransactionMetadata_Metadata `protobuf_oneof:"metadata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMetadata) Reset() {
	*x = TransactionMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata) ProtoMessage() {}

func (x *TransactionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionMetadata) GetSenderAddress() []byte {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

func (x *TransactionMetadata) GetMetadata() isTransactionMetadata_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TransactionMetadata) GetTransfer() *TransactionMetadata_TransferMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *TransactionMetadata) GetExchange() *TransactionMetadata_ExchangeMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_Exchange); ok {
			return x.Exchange
		}
	}
	return nil
}

func (x *TransactionMetadata) GetMassTransfer() *TransactionMetadata_MassTransferMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_MassTransfer); ok {
			return x.MassTransfer
		}
	}
	return nil
}

func (x *TransactionMetadata) GetInvokeScript() *TransactionMetadata_InvokeScriptMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_InvokeScript); ok {
			return x.InvokeScript
		}
	}
	return nil
}

func (x *TransactionMetadata) GetLease() *TransactionMetadata_LeaseMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_Lease); ok {
			return x.Lease
		}
	}
	return nil
}

func (x *TransactionMetadata) GetEthereum() *TransactionMetadata_EthereumMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*TransactionMetadata_Ethereum); ok {
			return x.Ethereum
		}
	}
	return nil
}

type isTransactionMetadata_Metadata interface {
	isTransactionMetadata_Metadata()
}

type TransactionMetadata_Transfer struct {
	Transfer *TransactionMetadata_TransferMetadata `protobuf:"bytes,104,opt,name=transfer,proto3,oneof"`
}

type TransactionMetadata_Exchange struct {
	Exchange *TransactionMetadata_ExchangeMetadata `protobuf:"bytes,107,opt,name=exchange,proto3,oneof"`
}

type TransactionMetadata_MassTransfer struct {
	MassTransfer *TransactionMetadata_MassTransferMetadata `protobuf:"bytes,111,opt,name=mass_transfer,json=massTransfer,proto3,oneof"`
}

type TransactionMetadata_InvokeScript struct {
	InvokeScript *TransactionMetadata_InvokeScriptMetadata `protobuf:"bytes,116,opt,name=invoke_script,json=invokeScript,proto3,oneof"`
}

type TransactionMetadata_Lease struct {
	Lease *TransactionMetadata_LeaseMetadata `protobuf:"bytes,117,opt,name=lease,proto3,oneof"`
}

type TransactionMetadata_Ethereum struct {
	Ethereum *TransactionMetadata_EthereumMetadata `protobuf:"bytes,301,opt,name=ethereum,proto3,oneof"`
}

func (*TransactionMetadata_Transfer) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Exchange) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_MassTransfer) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_InvokeScript) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Lease) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Ethereum) isTransactionMetadata_Metadata() {}

type BlockchainUpdated_Append struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Body:
	//
	//	*BlockchainUpdated_Append_Block
	//	*BlockchainUpdated_Append_MicroBlock
	Body                    isBlockchainUpdated_Append_Body `protobuf_oneof:"body"`
	TransactionIds          [][]byte                        `protobuf:"bytes,3,rep,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	TransactionsMetadata    []*TransactionMetadata          `protobuf:"bytes,4,rep,name=transactions_metadata,json=transactionsMetadata,proto3" json:"transactions_metadata,omitempty"`
	StateUpdate             *StateUpdate                    `protobuf:"bytes,11,opt,name=state_update,json=stateUpdate,proto3" json:"state_update,omitempty"`
	TransactionStateUpdates []*StateUpdate                  `protobuf:"bytes,12,rep,name=transaction_state_updates,json=transactionStateUpdates,proto3" json:"transaction_state_updates,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BlockchainUpdated_Append) Reset() {
	*x = BlockchainUpdated_Append{}
	mi := &file_waves_events_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockchainUpdated_Append) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append) ProtoMessage() {}

func (x *BlockchainUpdated_Append) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BlockchainUpdated_Append) GetBody() isBlockchainUpdated_Append_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetBlock() *BlockchainUpdated_Append_BlockAppend {
	if x != nil {
		if x, ok := x.Body.(*BlockchainUpdated_Append_Block); ok {
			return x.Block
		}
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetMicroBlock() *BlockchainUpdated_Append_MicroBlockAppend {
	if x != nil {
		if x, ok := x.Body.(*BlockchainUpdated_Append_MicroBlock); ok {
			return x.MicroBlock
		}
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionIds() [][]byte {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionsMetadata() []*TransactionMetadata {
	if x != nil {
		return x.TransactionsMetadata
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetStateUpdate() *StateUpdate {
	if x != nil {
		return x.StateUpdate
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionStateUpdates() []*StateUpdate {
	if x != nil {
		return x.TransactionStateUpdates
	}
	return nil
}

type isBlockchainUpdated_Append_Body interface {
	isBlockchainUpdated_Append_Body()
}

type BlockchainUpdated_Append_Block struct {
	Block *BlockchainUpdated_Append_BlockAppend `protobuf:"bytes,1,opt,name=block,proto3,oneof"`
}

type BlockchainUpdated_Append_MicroBlock struct {
	MicroBlock *BlockchainUpdated_Append_MicroBlockAppend `protobuf:"bytes,2,opt,name=micro_block,json=microBlock,proto3,oneof"`
}

func (*BlockchainUpdated_Append_Block) isBlockchainUpdated_Append_Body() {}

func (*BlockchainUpdated_Append_MicroBlock) isBlockchainUpdated_Append_Body() {}

type BlockchainUpdated_Rollback struct {
	state                 protoimpl.MessageState                  `protogen:"open.v1"`
	Type                  BlockchainUpdated_Rollback_RollbackType `protobuf:"varint,1,opt,name=type,proto3,enum=waves.events.BlockchainUpdated_Rollback_RollbackType" json:"type,omitempty"`
	RemovedTransactionIds [][]byte                                `protobuf:"bytes,2,rep,name=removed_transaction_ids,json=removedTransactionIds,proto3" json:"removed_transaction_ids,omitempty"`
	RemovedBlocks         []*waves.Block                          `protobuf:"bytes,3,rep,name=removed_blocks,json=removedBlocks,proto3" json:"removed_blocks,omitempty"`
	RollbackStateUpdate   *StateUpdate                            `protobuf:"bytes,4,opt,name=rollback_state_update,json=rollbackStateUpdate,proto3" json:"rollback_state_update,omitempty"`
	DeactivatedFeatures   []int32                                 `protobuf:"varint,5,rep,packed,name=deactivated_features,json=deactivatedFeatures,proto3" json:"deactivated_features,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BlockchainUpdated_Rollback) Reset() {
	*x = BlockchainUpdated_Rollback{}
	mi := &file_waves_events_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockchainUpdated_Rollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Rollback) ProtoMessage() {}

func (x *BlockchainUpdated_Rollback) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Rollback.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Rollback) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BlockchainUpdated_Rollback) GetType() BlockchainUpdated_Rollback_RollbackType {
	if x != nil {
		return x.Type
	}
	return BlockchainUpdated_Rollback_BLOCK
}

func (x *BlockchainUpdated_Rollback) GetRemovedTransactionIds() [][]byte {
	if x != nil {
		return x.RemovedTransactionIds
	}
	return nil
}

func (x *BlockchainUpdated_Rollback) GetRemovedBlocks() []*waves.Block {
	if x != nil {
		return x.RemovedBlocks
	}
	return nil
}

func (x *BlockchainUpdated_Rollback) GetRollbackStateUpdate() *StateUpdate {
	if x != nil {
		return x.RollbackStateUpdate
	}
	return nil
}

func (x *BlockchainUpdated_Rollback) GetDeactivatedFeatures() []int32 {
	if x != nil {
		return x.DeactivatedFeatures
	}
	return nil
}

type BlockchainUpdated_Append_BlockAppend struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Block              *waves.Block           `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	UpdatedWavesAmount int64                  `protobuf:"varint,2,opt,name=updated_waves_amount,json=updatedWavesAmount,proto3" json:"updated_waves_amount,omitempty"`
	ActivatedFeatures  []int32                `protobuf:"varint,3,rep,packed,name=activated_features,json=activatedFeatures,proto3" json:"activated_features,omitempty"`
	Vrf                []byte                 `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	RewardShares       []*waves.RewardShare   `protobuf:"bytes,5,rep,name=reward_shares,json=rewardShares,proto3" json:"reward_shares,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BlockchainUpdated_Append_BlockAppend) Reset() {
	*x = BlockchainUpdated_Append_BlockAppend{}
	mi := &file_waves_events_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockchainUpdated_Append_BlockAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append_BlockAppend) ProtoMessage() {}

func (x *BlockchainUpdated_Append_BlockAppend) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append_BlockAppend.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append_BlockAppend) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *BlockchainUpdated_Append_BlockAppend) GetBlock() *waves.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockchainUpdated_Append_BlockAppend) GetUpdatedWavesAmount() int64 {
	if x != nil {
		return x.UpdatedWavesAmount
	}
	return 0
}

func (x *BlockchainUpdated_Append_BlockAppend) GetActivatedFeatures() []int32 {
	if x != nil {
		return x.ActivatedFeatures
	}
	return nil
}

func (x *BlockchainUpdated_Append_BlockAppend) GetVrf() []byte {
	if x != nil {
		return x.Vrf
	}
	return nil
}

func (x *BlockchainUpdated_Append_BlockAppend) GetRewardShares() []*waves.RewardShare {
	if x != nil {
		return x.RewardShares
	}
	return nil
}

type BlockchainUpdated_Append_MicroBlockAppend struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	MicroBlock              *waves.SignedMicroBlock `protobuf:"bytes,1,opt,name=micro_block,json=microBlock,proto3" json:"micro_block,omitempty"`
	UpdatedTransactionsRoot []byte                  `protobuf:"bytes,2,opt,name=updated_transactions_root,json=updatedTransactionsRoot,proto3" json:"updated_transactions_root,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) Reset() {
	*x = BlockchainUpdated_Append_MicroBlockAppend{}
	mi := &file_waves_events_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append_MicroBlockAppend) ProtoMessage() {}

func (x *BlockchainUpdated_Append_MicroBlockAppend) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append_MicroBlockAppend.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append_MicroBlockAppend) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) GetMicroBlock() *waves.SignedMicroBlock {
	if x != nil {
		return x.MicroBlock
	}
	return nil
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) GetUpdatedTransactionsRoot() []byte {
	if x != nil {
		return x.UpdatedTransactionsRoot
	}
	return nil
}

type StateUpdate_BalanceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AmountAfter   *waves.Amount          `protobuf:"bytes,2,opt,name=amount_after,json=amountAfter,proto3" json:"amount_after,omitempty"`
	AmountBefore  int64                  `protobuf:"varint,3,opt,name=amount_before,json=amountBefore,proto3" json:"amount_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_BalanceUpdate) Reset() {
	*x = StateUpdate_BalanceUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_BalanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_BalanceUpdate) ProtoMessage() {}

func (x *StateUpdate_BalanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_BalanceUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_BalanceUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StateUpdate_BalanceUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_BalanceUpdate) GetAmountAfter() *waves.Amount {
	if x != nil {
		return x.AmountAfter
	}
	return nil
}

func (x *StateUpdate_BalanceUpdate) GetAmountBefore() int64 {
	if x != nil {
		return x.AmountBefore
	}
	return 0
}

type StateUpdate_LeasingUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	InAfter       int64                  `protobuf:"varint,2,opt,name=in_after,json=inAfter,proto3" json:"in_after,omitempty"`
	OutAfter      int64                  `protobuf:"varint,3,opt,name=out_after,json=outAfter,proto3" json:"out_after,omitempty"`
	InBefore      int64                  `protobuf:"varint,4,opt,name=in_before,json=inBefore,proto3" json:"in_before,omitempty"`
	OutBefore     int64                  `protobuf:"varint,5,opt,name=out_before,json=outBefore,proto3" json:"out_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_LeasingUpdate) Reset() {
	*x = StateUpdate_LeasingUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_LeasingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_LeasingUpdate) ProtoMessage() {}

func (x *StateUpdate_LeasingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_LeasingUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_LeasingUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StateUpdate_LeasingUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_LeasingUpdate) GetInAfter() int64 {
	if x != nil {
		return x.InAfter
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetOutAfter() int64 {
	if x != nil {
		return x.OutAfter
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetInBefore() int64 {
	if x != nil {
		return x.InBefore
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetOutBefore() int64 {
	if x != nil {
		return x.OutBefore
	}
	return 0
}

type StateUpdate_LeaseUpdate struct {
	state               protoimpl.MessageState              `protogen:"open.v1"`
	LeaseId             []byte                              `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	StatusAfter         StateUpdate_LeaseUpdate_LeaseStatus `protobuf:"varint,2,opt,name=status_after,json=statusAfter,proto3,enum=waves.events.StateUpdate_LeaseUpdate_LeaseStatus" json:"status_after,omitempty"`
	Amount              int64                               `protobuf:"varint,10,opt,name=amount,proto3" json:"amount,omitempty"`
	Sender              []byte                              `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient           []byte                              `protobuf:"bytes,12,opt,name=recipient,proto3" json:"recipient,omitempty"`
	OriginTransactionId []byte                              `protobuf:"bytes,13,opt,name=origin_transaction_id,json=originTransactionId,proto3" json:"origin_transaction_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StateUpdate_LeaseUpdate) Reset() {
	*x = StateUpdate_LeaseUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_LeaseUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_LeaseUpdate) ProtoMessage() {}

func (x *StateUpdate_LeaseUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_LeaseUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_LeaseUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StateUpdate_LeaseUpdate) GetLeaseId() []byte {
	if x != nil {
		return x.LeaseId
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetStatusAfter() StateUpdate_LeaseUpdate_LeaseStatus {
	if x != nil {
		return x.StatusAfter
	}
	return StateUpdate_LeaseUpdate_INACTIVE
}

func (x *StateUpdate_LeaseUpdate) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StateUpdate_LeaseUpdate) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetOriginTransactionId() []byte {
	if x != nil {
		return x.OriginTransactionId
	}
	return nil
}

type StateUpdate_DataEntryUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Address         []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DataEntry       *waves.DataEntry       `protobuf:"bytes,2,opt,name=data_entry,json=dataEntry,proto3" json:"data_entry,omitempty"`
	DataEntryBefore *waves.DataEntry       `protobuf:"bytes,10,opt,name=data_entry_before,json=dataEntryBefore,proto3" json:"data_entry_before,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StateUpdate_DataEntryUpdate) Reset() {
	*x = StateUpdate_DataEntryUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_DataEntryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_DataEntryUpdate) ProtoMessage() {}

func (x *StateUpdate_DataEntryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_DataEntryUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_DataEntryUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 3}
}

func (x *StateUpdate_DataEntryUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_DataEntryUpdate) GetDataEntry() *waves.DataEntry {
	if x != nil {
		return x.DataEntry
	}
	return nil
}

func (x *StateUpdate_DataEntryUpdate) GetDataEntryBefore() *waves.DataEntry {
	if x != nil {
		return x.DataEntryBefore
	}
	return nil
}

type StateUpdate_AssetStateUpdate struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Before        *StateUpdate_AssetDetails `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *StateUpdate_AssetDetails `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_AssetStateUpdate) Reset() {
	*x = StateUpdate_AssetStateUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_AssetStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetStateUpdate) ProtoMessage() {}

func (x *StateUpdate_AssetStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetStateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetStateUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 4}
}

func (x *StateUpdate_AssetStateUpdate) GetBefore() *StateUpdate_AssetDetails {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *StateUpdate_AssetStateUpdate) GetAfter() *StateUpdate_AssetDetails {
	if x != nil {
		return x.After
	}
	return nil
}

type StateUpdate_AssetDetails struct {
	state           protoimpl.MessageState                    `protogen:"open.v1"`
	AssetId         []byte                                    `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Issuer          []byte                                    `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Decimals        int32                                     `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Name            string                                    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                                    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Reissuable      bool                                      `protobuf:"varint,6,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	Volume          int64                                     `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	ScriptInfo      *StateUpdate_AssetDetails_AssetScriptInfo `protobuf:"bytes,8,opt,name=script_info,json=scriptInfo,proto3" json:"script_info,omitempty"`
	Sponsorship     int64                                     `protobuf:"varint,9,opt,name=sponsorship,proto3" json:"sponsorship,omitempty"`
	Nft             bool                                      `protobuf:"varint,10,opt,name=nft,proto3" json:"nft,omitempty"`
	LastUpdated     int32                                     `protobuf:"varint,11,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	SequenceInBlock int32                                     `protobuf:"varint,12,opt,name=sequence_in_block,json=sequenceInBlock,proto3" json:"sequence_in_block,omitempty"`
	IssueHeight     int32                                     `protobuf:"varint,13,opt,name=issue_height,json=issueHeight,proto3" json:"issue_height,omitempty"`
	// Related to a past behavior in the blockchain when it was possible to reissue
	// assets so that the total volume became more then int64 max value.
	// This field represents accurate volume even for those assets.
	// Can be ignored if the target system does not need such accuracy.
	// Encoding: like Java BigInteger, https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#toByteArray()
	SafeVolume    []byte `protobuf:"bytes,20,opt,name=safe_volume,json=safeVolume,proto3" json:"safe_volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_AssetDetails) Reset() {
	*x = StateUpdate_AssetDetails{}
	mi := &file_waves_events_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_AssetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetDetails) ProtoMessage() {}

func (x *StateUpdate_AssetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetDetails.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetDetails) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 5}
}

func (x *StateUpdate_AssetDetails) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetIssuer() []byte {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateUpdate_AssetDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StateUpdate_AssetDetails) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

func (x *StateUpdate_AssetDetails) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetScriptInfo() *StateUpdate_AssetDetails_AssetScriptInfo {
	if x != nil {
		return x.ScriptInfo
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetSponsorship() int64 {
	if x != nil {
		return x.Sponsorship
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetNft() bool {
	if x != nil {
		return x.Nft
	}
	return false
}

func (x *StateUpdate_AssetDetails) GetLastUpdated() int32 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetSequenceInBlock() int32 {
	if x != nil {
		return x.SequenceInBlock
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetIssueHeight() int32 {
	if x != nil {
		return x.IssueHeight
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetSafeVolume() []byte {
	if x != nil {
		return x.SafeVolume
	}
	return nil
}

type StateUpdate_AssetInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Decimals      int32                  `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_AssetInfo) Reset() {
	*x = StateUpdate_AssetInfo{}
	mi := &file_waves_events_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetInfo) ProtoMessage() {}

func (x *StateUpdate_AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetInfo.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetInfo) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 6}
}

func (x *StateUpdate_AssetInfo) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StateUpdate_AssetInfo) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *StateUpdate_AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StateUpdate_ScriptUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Before        []byte                 `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         []byte                 `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_ScriptUpdate) Reset() {
	*x = StateUpdate_ScriptUpdate{}
	mi := &file_waves_events_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_ScriptUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_ScriptUpdate) ProtoMessage() {}

func (x *StateUpdate_ScriptUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_ScriptUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_ScriptUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 7}
}

func (x *StateUpdate_ScriptUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_ScriptUpdate) GetBefore() []byte {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *StateUpdate_ScriptUpdate) GetAfter() []byte {
	if x != nil {
		return x.After
	}
	return nil
}

type StateUpdate_AssetDetails_AssetScriptInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        []byte                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Complexity    int64                  `protobuf:"varint,2,opt,name=complexity,proto3" json:"complexity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) Reset() {
	*x = StateUpdate_AssetDetails_AssetScriptInfo{}
	mi := &file_waves_events_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetDetails_AssetScriptInfo) ProtoMessage() {}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetDetails_AssetScriptInfo.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetDetails_AssetScriptInfo) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 5, 0}
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) GetComplexity() int64 {
	if x != nil {
		return x.Complexity
	}
	return 0
}

type TransactionMetadata_TransferMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecipientAddress []byte                 `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransactionMetadata_TransferMetadata) Reset() {
	*x = TransactionMetadata_TransferMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_TransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_TransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_TransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_TransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_TransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TransactionMetadata_TransferMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

type TransactionMetadata_MassTransferMetadata struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RecipientsAddresses [][]byte               `protobuf:"bytes,1,rep,name=recipients_addresses,json=recipientsAddresses,proto3" json:"recipients_addresses,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TransactionMetadata_MassTransferMetadata) Reset() {
	*x = TransactionMetadata_MassTransferMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_MassTransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_MassTransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_MassTransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_MassTransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_MassTransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TransactionMetadata_MassTransferMetadata) GetRecipientsAddresses() [][]byte {
	if x != nil {
		return x.RecipientsAddresses
	}
	return nil
}

type TransactionMetadata_ExchangeMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields starting with `order_*` represent order metadata.
	// Each of them is a collection of exactly 2 elements.
	// Element indexes correspond to their parent order indexes in the exchange transaction.
	OrderIds              [][]byte `protobuf:"bytes,1,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
	OrderSenderAddresses  [][]byte `protobuf:"bytes,2,rep,name=order_sender_addresses,json=orderSenderAddresses,proto3" json:"order_sender_addresses,omitempty"`
	OrderSenderPublicKeys [][]byte `protobuf:"bytes,3,rep,name=order_sender_public_keys,json=orderSenderPublicKeys,proto3" json:"order_sender_public_keys,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TransactionMetadata_ExchangeMetadata) Reset() {
	*x = TransactionMetadata_ExchangeMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_ExchangeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_ExchangeMetadata) ProtoMessage() {}

func (x *TransactionMetadata_ExchangeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_ExchangeMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_ExchangeMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 2}
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderIds() [][]byte {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderSenderAddresses() [][]byte {
	if x != nil {
		return x.OrderSenderAddresses
	}
	return nil
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderSenderPublicKeys() [][]byte {
	if x != nil {
		return x.OrderSenderPublicKeys
	}
	return nil
}

type TransactionMetadata_InvokeScriptMetadata struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	DAppAddress   []byte                                    `protobuf:"bytes,1,opt,name=d_app_address,json=dAppAddress,proto3" json:"d_app_address,omitempty"`
	FunctionName  string                                    `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Arguments     []*waves.InvokeScriptResult_Call_Argument `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Payments      []*waves.Amount                           `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Result        *waves.InvokeScriptResult                 `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMetadata_InvokeScriptMetadata) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_InvokeScriptMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3}
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetDAppAddress() []byte {
	if x != nil {
		return x.DAppAddress
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetArguments() []*waves.InvokeScriptResult_Call_Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetPayments() []*waves.Amount {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetResult() *waves.InvokeScriptResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TransactionMetadata_LeaseMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecipientAddress []byte                 `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransactionMetadata_LeaseMetadata) Reset() {
	*x = TransactionMetadata_LeaseMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_LeaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_LeaseMetadata) ProtoMessage() {}

func (x *TransactionMetadata_LeaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_LeaseMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_LeaseMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 4}
}

func (x *TransactionMetadata_LeaseMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

type TransactionMetadata_EthereumTransferMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecipientAddress []byte                 `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           *waves.Amount          `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransactionMetadata_EthereumTransferMetadata) Reset() {
	*x = TransactionMetadata_EthereumTransferMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_EthereumTransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_EthereumTransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_EthereumTransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_EthereumTransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_EthereumTransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 5}
}

func (x *TransactionMetadata_EthereumTransferMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *TransactionMetadata_EthereumTransferMetadata) GetAmount() *waves.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TransactionMetadata_EthereumMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// bytes sender_address = 1;
	Timestamp       int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fee             int64  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	SenderPublicKey []byte `protobuf:"bytes,4,opt,name=sender_public_key,json=senderPublicKey,proto3" json:"sender_public_key,omitempty"`
	// Types that are valid to be assigned to Action:
	//
	//	*TransactionMetadata_EthereumMetadata_Transfer
	//	*TransactionMetadata_EthereumMetadata_Invoke
	Action        isTransactionMetadata_EthereumMetadata_Action `protobuf_oneof:"Action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMetadata_EthereumMetadata) Reset() {
	*x = TransactionMetadata_EthereumMetadata{}
	mi := &file_waves_events_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_EthereumMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_EthereumMetadata) ProtoMessage() {}

func (x *TransactionMetadata_EthereumMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_EthereumMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_EthereumMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 6}
}

func (x *TransactionMetadata_EthereumMetadata) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionMetadata_EthereumMetadata) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionMetadata_EthereumMetadata) GetSenderPublicKey() []byte {
	if x != nil {
		return x.SenderPublicKey
	}
	return nil
}

func (x *TransactionMetadata_EthereumMetadata) GetAction() isTransactionMetadata_EthereumMetadata_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *TransactionMetadata_EthereumMetadata) GetTransfer() *TransactionMetadata_EthereumTransferMetadata {
	if x != nil {
		if x, ok := x.Action.(*TransactionMetadata_EthereumMetadata_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *TransactionMetadata_EthereumMetadata) GetInvoke() *TransactionMetadata_InvokeScriptMetadata {
	if x != nil {
		if x, ok := x.Action.(*TransactionMetadata_EthereumMetadata_Invoke); ok {
			return x.Invoke
		}
	}
	return nil
}

type isTransactionMetadata_EthereumMetadata_Action interface {
	isTransactionMetadata_EthereumMetadata_Action()
}

type TransactionMetadata_EthereumMetadata_Transfer struct {
	Transfer *TransactionMetadata_EthereumTransferMetadata `protobuf:"bytes,10,opt,name=transfer,proto3,oneof"`
}

type TransactionMetadata_EthereumMetadata_Invoke struct {
	Invoke *TransactionMetadata_InvokeScriptMetadata `protobuf:"bytes,11,opt,name=invoke,proto3,oneof"`
}

func (*TransactionMetadata_EthereumMetadata_Transfer) isTransactionMetadata_EthereumMetadata_Action() {
}

func (*TransactionMetadata_EthereumMetadata_Invoke) isTransactionMetadata_EthereumMetadata_Action() {}

type TransactionMetadata_InvokeScriptMetadata_Argument struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_List_
	Value         isTransactionMetadata_InvokeScriptMetadata_Argument_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata_Argument{}
	mi := &file_waves_events_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata_Argument.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata_Argument) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetValue() isTransactionMetadata_InvokeScriptMetadata_Argument_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetIntegerValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue); ok {
			return x.IntegerValue
		}
	}
	return 0
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetBinaryValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue); ok {
			return x.BinaryValue
		}
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.Value.(*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetList() *TransactionMetadata_InvokeScriptMetadata_Argument_List {
	if x != nil {
		if x, ok := x.Value.(*TransactionMetadata_InvokeScriptMetadata_Argument_List_); ok {
			return x.List
		}
	}
	return nil
}

type isTransactionMetadata_InvokeScriptMetadata_Argument_Value interface {
	isTransactionMetadata_InvokeScriptMetadata_Argument_Value()
}

type TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,1,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,2,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,4,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_List_ struct {
	List *TransactionMetadata_InvokeScriptMetadata_Argument_List `protobuf:"bytes,10,opt,name=list,proto3,oneof"`
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_List_) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

type TransactionMetadata_InvokeScriptMetadata_Argument_List struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Items         []*TransactionMetadata_InvokeScriptMetadata_Argument `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata_Argument_List{}
	mi := &file_waves_events_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_List) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata_Argument_List.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata_Argument_List) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3, 0, 0}
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) GetItems() []*TransactionMetadata_InvokeScriptMetadata_Argument {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_waves_events_events_proto protoreflect.FileDescriptor

const file_waves_events_events_proto_rawDesc = "" +
	"\n" +
	"\x19waves/events/events.proto\x12\fwaves.events\x1a\x11waves/block.proto\x1a\x12waves/amount.proto\x1a\x17waves/transaction.proto\x1a waves/invoke_script_result.proto\x1a\x18waves/reward_share.proto\"\xcf\v\n" +
	"\x11BlockchainUpdated\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12@\n" +
	"\x06append\x18\v \x01(\v2&.waves.events.BlockchainUpdated.AppendH\x00R\x06append\x12F\n" +
	"\brollback\x18\f \x01(\v2(.waves.events.BlockchainUpdated.RollbackH\x00R\brollback\x12P\n" +
	"\x11referenced_assets\x18\x15 \x03(\v2#.waves.events.StateUpdate.AssetInfoR\x10referencedAssets\x1a\xb9\x06\n" +
	"\x06Append\x12J\n" +
	"\x05block\x18\x01 \x01(\v22.waves.events.BlockchainUpdated.Append.BlockAppendH\x00R\x05block\x12Z\n" +
	"\vmicro_block\x18\x02 \x01(\v27.waves.events.BlockchainUpdated.Append.MicroBlockAppendH\x00R\n" +
	"microBlock\x12'\n" +
	"\x0ftransaction_ids\x18\x03 \x03(\fR\x0etransactionIds\x12V\n" +
	"\x15transactions_metadata\x18\x04 \x03(\v2!.waves.events.TransactionMetadataR\x14transactionsMetadata\x12<\n" +
	"\fstate_update\x18\v \x01(\v2\x19.waves.events.StateUpdateR\vstateUpdate\x12U\n" +
	"\x19transaction_state_updates\x18\f \x03(\v2\x19.waves.events.StateUpdateR\x17transactionStateUpdates\x1a\xdd\x01\n" +
	"\vBlockAppend\x12\"\n" +
	"\x05block\x18\x01 \x01(\v2\f.waves.BlockR\x05block\x120\n" +
	"\x14updated_waves_amount\x18\x02 \x01(\x03R\x12updatedWavesAmount\x12-\n" +
	"\x12activated_features\x18\x03 \x03(\x05R\x11activatedFeatures\x12\x10\n" +
	"\x03vrf\x18\x04 \x01(\fR\x03vrf\x127\n" +
	"\rreward_shares\x18\x05 \x03(\v2\x12.waves.RewardShareR\frewardShares\x1a\x88\x01\n" +
	"\x10MicroBlockAppend\x128\n" +
	"\vmicro_block\x18\x01 \x01(\v2\x17.waves.SignedMicroBlockR\n" +
	"microBlock\x12:\n" +
	"\x19updated_transactions_root\x18\x02 \x01(\fR\x17updatedTransactionsRootB\x06\n" +
	"\x04body\x1a\xef\x02\n" +
	"\bRollback\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.waves.events.BlockchainUpdated.Rollback.RollbackTypeR\x04type\x126\n" +
	"\x17removed_transaction_ids\x18\x02 \x03(\fR\x15removedTransactionIds\x123\n" +
	"\x0eremoved_blocks\x18\x03 \x03(\v2\f.waves.BlockR\rremovedBlocks\x12M\n" +
	"\x15rollback_state_update\x18\x04 \x01(\v2\x19.waves.events.StateUpdateR\x13rollbackStateUpdate\x121\n" +
	"\x14deactivated_features\x18\x05 \x03(\x05R\x13deactivatedFeatures\")\n" +
	"\fRollbackType\x12\t\n" +
	"\x05BLOCK\x10\x00\x12\x0e\n" +
	"\n" +
	"MICROBLOCK\x10\x01B\b\n" +
	"\x06update\"\xd9\x10\n" +
	"\vStateUpdate\x12C\n" +
	"\bbalances\x18\x01 \x03(\v2'.waves.events.StateUpdate.BalanceUpdateR\bbalances\x12W\n" +
	"\x13leasing_for_address\x18\x02 \x03(\v2'.waves.events.StateUpdate.LeasingUpdateR\x11leasingForAddress\x12L\n" +
	"\fdata_entries\x18\x03 \x03(\v2).waves.events.StateUpdate.DataEntryUpdateR\vdataEntries\x12B\n" +
	"\x06assets\x18\x04 \x03(\v2*.waves.events.StateUpdate.AssetStateUpdateR\x06assets\x12R\n" +
	"\x11individual_leases\x18\x05 \x03(\v2%.waves.events.StateUpdate.LeaseUpdateR\x10individualLeases\x12@\n" +
	"\ascripts\x18\x06 \x03(\v2&.waves.events.StateUpdate.ScriptUpdateR\ascripts\x12'\n" +
	"\x0fdeleted_aliases\x18\a \x03(\tR\x0edeletedAliases\x1a\x80\x01\n" +
	"\rBalanceUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x120\n" +
	"\famount_after\x18\x02 \x01(\v2\r.waves.AmountR\vamountAfter\x12#\n" +
	"\ramount_before\x18\x03 \x01(\x03R\famountBefore\x1a\x9d\x01\n" +
	"\rLeasingUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12\x19\n" +
	"\bin_after\x18\x02 \x01(\x03R\ainAfter\x12\x1b\n" +
	"\tout_after\x18\x03 \x01(\x03R\boutAfter\x12\x1b\n" +
	"\tin_before\x18\x04 \x01(\x03R\binBefore\x12\x1d\n" +
	"\n" +
	"out_before\x18\x05 \x01(\x03R\toutBefore\x1a\xa9\x02\n" +
	"\vLeaseUpdate\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\fR\aleaseId\x12T\n" +
	"\fstatus_after\x18\x02 \x01(\x0e21.waves.events.StateUpdate.LeaseUpdate.LeaseStatusR\vstatusAfter\x12\x16\n" +
	"\x06amount\x18\n" +
	" \x01(\x03R\x06amount\x12\x16\n" +
	"\x06sender\x18\v \x01(\fR\x06sender\x12\x1c\n" +
	"\trecipient\x18\f \x01(\fR\trecipient\x122\n" +
	"\x15origin_transaction_id\x18\r \x01(\fR\x13originTransactionId\"'\n" +
	"\vLeaseStatus\x12\f\n" +
	"\bINACTIVE\x10\x00\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x01\x1a\x9a\x01\n" +
	"\x0fDataEntryUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12/\n" +
	"\n" +
	"data_entry\x18\x02 \x01(\v2\x10.waves.DataEntryR\tdataEntry\x12<\n" +
	"\x11data_entry_before\x18\n" +
	" \x01(\v2\x10.waves.DataEntryR\x0fdataEntryBefore\x1a\x90\x01\n" +
	"\x10AssetStateUpdate\x12>\n" +
	"\x06before\x18\x01 \x01(\v2&.waves.events.StateUpdate.AssetDetailsR\x06before\x12<\n" +
	"\x05after\x18\x02 \x01(\v2&.waves.events.StateUpdate.AssetDetailsR\x05after\x1a\xb6\x04\n" +
	"\fAssetDetails\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\fR\aassetId\x12\x16\n" +
	"\x06issuer\x18\x02 \x01(\fR\x06issuer\x12\x1a\n" +
	"\bdecimals\x18\x03 \x01(\x05R\bdecimals\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"reissuable\x18\x06 \x01(\bR\n" +
	"reissuable\x12\x16\n" +
	"\x06volume\x18\a \x01(\x03R\x06volume\x12W\n" +
	"\vscript_info\x18\b \x01(\v26.waves.events.StateUpdate.AssetDetails.AssetScriptInfoR\n" +
	"scriptInfo\x12 \n" +
	"\vsponsorship\x18\t \x01(\x03R\vsponsorship\x12\x10\n" +
	"\x03nft\x18\n" +
	" \x01(\bR\x03nft\x12!\n" +
	"\flast_updated\x18\v \x01(\x05R\vlastUpdated\x12*\n" +
	"\x11sequence_in_block\x18\f \x01(\x05R\x0fsequenceInBlock\x12!\n" +
	"\fissue_height\x18\r \x01(\x05R\vissueHeight\x12\x1f\n" +
	"\vsafe_volume\x18\x14 \x01(\fR\n" +
	"safeVolume\x1aI\n" +
	"\x0fAssetScriptInfo\x12\x16\n" +
	"\x06script\x18\x01 \x01(\fR\x06script\x12\x1e\n" +
	"\n" +
	"complexity\x18\x02 \x01(\x03R\n" +
	"complexity\x1aK\n" +
	"\tAssetInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x1a\n" +
	"\bdecimals\x18\x02 \x01(\x05R\bdecimals\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x1aV\n" +
	"\fScriptUpdate\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12\x16\n" +
	"\x06before\x18\x02 \x01(\fR\x06before\x12\x14\n" +
	"\x05after\x18\x03 \x01(\fR\x05after\"\xb8\x0f\n" +
	"\x13TransactionMetadata\x12%\n" +
	"\x0esender_address\x18\x01 \x01(\fR\rsenderAddress\x12P\n" +
	"\btransfer\x18h \x01(\v22.waves.events.TransactionMetadata.TransferMetadataH\x00R\btransfer\x12P\n" +
	"\bexchange\x18k \x01(\v22.waves.events.TransactionMetadata.ExchangeMetadataH\x00R\bexchange\x12]\n" +
	"\rmass_transfer\x18o \x01(\v26.waves.events.TransactionMetadata.MassTransferMetadataH\x00R\fmassTransfer\x12]\n" +
	"\rinvoke_script\x18t \x01(\v26.waves.events.TransactionMetadata.InvokeScriptMetadataH\x00R\finvokeScript\x12G\n" +
	"\x05lease\x18u \x01(\v2/.waves.events.TransactionMetadata.LeaseMetadataH\x00R\x05lease\x12Q\n" +
	"\bethereum\x18\xad\x02 \x01(\v22.waves.events.TransactionMetadata.EthereumMetadataH\x00R\bethereum\x1a?\n" +
	"\x10TransferMetadata\x12+\n" +
	"\x11recipient_address\x18\x01 \x01(\fR\x10recipientAddress\x1aI\n" +
	"\x14MassTransferMetadata\x121\n" +
	"\x14recipients_addresses\x18\x01 \x03(\fR\x13recipientsAddresses\x1a\x9e\x01\n" +
	"\x10ExchangeMetadata\x12\x1b\n" +
	"\torder_ids\x18\x01 \x03(\fR\borderIds\x124\n" +
	"\x16order_sender_addresses\x18\x02 \x03(\fR\x14orderSenderAddresses\x127\n" +
	"\x18order_sender_public_keys\x18\x03 \x03(\fR\x15orderSenderPublicKeys\x1a\xed\x04\n" +
	"\x14InvokeScriptMetadata\x12\"\n" +
	"\rd_app_address\x18\x01 \x01(\fR\vdAppAddress\x12#\n" +
	"\rfunction_name\x18\x02 \x01(\tR\ffunctionName\x12E\n" +
	"\targuments\x18\x03 \x03(\v2'.waves.InvokeScriptResult.Call.ArgumentR\targuments\x12)\n" +
	"\bpayments\x18\x04 \x03(\v2\r.waves.AmountR\bpayments\x121\n" +
	"\x06result\x18\x05 \x01(\v2\x19.waves.InvokeScriptResultR\x06result\x1a\xe6\x02\n" +
	"\bArgument\x12%\n" +
	"\rinteger_value\x18\x01 \x01(\x03H\x00R\fintegerValue\x12#\n" +
	"\fbinary_value\x18\x02 \x01(\fH\x00R\vbinaryValue\x12#\n" +
	"\fstring_value\x18\x03 \x01(\tH\x00R\vstringValue\x12%\n" +
	"\rboolean_value\x18\x04 \x01(\bH\x00R\fbooleanValue\x12Z\n" +
	"\x04list\x18\n" +
	" \x01(\v2D.waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.ListH\x00R\x04list\x1a]\n" +
	"\x04List\x12U\n" +
	"\x05items\x18\x01 \x03(\v2?.waves.events.TransactionMetadata.InvokeScriptMetadata.ArgumentR\x05itemsB\a\n" +
	"\x05value\x1a<\n" +
	"\rLeaseMetadata\x12+\n" +
	"\x11recipient_address\x18\x01 \x01(\fR\x10recipientAddress\x1an\n" +
	"\x18EthereumTransferMetadata\x12+\n" +
	"\x11recipient_address\x18\x01 \x01(\fR\x10recipientAddress\x12%\n" +
	"\x06amount\x18\x02 \x01(\v2\r.waves.AmountR\x06amount\x1a\xa4\x02\n" +
	"\x10EthereumMetadata\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\x03R\x03fee\x12*\n" +
	"\x11sender_public_key\x18\x04 \x01(\fR\x0fsenderPublicKey\x12X\n" +
	"\btransfer\x18\n" +
	" \x01(\v2:.waves.events.TransactionMetadata.EthereumTransferMetadataH\x00R\btransfer\x12P\n" +
	"\x06invoke\x18\v \x01(\v26.waves.events.TransactionMetadata.InvokeScriptMetadataH\x00R\x06invokeB\b\n" +
	"\x06ActionB\n" +
	"\n" +
	"\bmetadataBe\n" +
	"!com.wavesplatform.events.protobufZ@github.com/wavesplatform/gowaves/pkg/grpc/generated/waves/eventsb\x06proto3"

var (
	file_waves_events_events_proto_rawDescOnce sync.Once
	file_waves_events_events_proto_rawDescData []byte
)

func file_waves_events_events_proto_rawDescGZIP() []byte {
	file_waves_events_events_proto_rawDescOnce.Do(func() {
		file_waves_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waves_events_events_proto_rawDesc), len(file_waves_events_events_proto_rawDesc)))
	})
	return file_waves_events_events_proto_rawDescData
}

var file_waves_events_events_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_waves_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_waves_events_events_proto_goTypes = []any{
	(BlockchainUpdated_Rollback_RollbackType)(0),                   // 0: waves.events.BlockchainUpdated.Rollback.RollbackType
	(StateUpdate_LeaseUpdate_LeaseStatus)(0),                       // 1: waves.events.StateUpdate.LeaseUpdate.LeaseStatus
	(*BlockchainUpdated)(nil),                                      // 2: waves.events.BlockchainUpdated
	(*StateUpdate)(nil),                                            // 3: waves.events.StateUpdate
	(*TransactionMetadata)(nil),                                    // 4: waves.events.TransactionMetadata
	(*BlockchainUpdated_Append)(nil),                               // 5: waves.events.BlockchainUpdated.Append
	(*BlockchainUpdated_Rollback)(nil),                             // 6: waves.events.BlockchainUpdated.Rollback
	(*BlockchainUpdated_Append_BlockAppend)(nil),                   // 7: waves.events.BlockchainUpdated.Append.BlockAppend
	(*BlockchainUpdated_Append_MicroBlockAppend)(nil),              // 8: waves.events.BlockchainUpdated.Append.MicroBlockAppend
	(*StateUpdate_BalanceUpdate)(nil),                              // 9: waves.events.StateUpdate.BalanceUpdate
	(*StateUpdate_LeasingUpdate)(nil),                              // 10: waves.events.StateUpdate.LeasingUpdate
	(*StateUpdate_LeaseUpdate)(nil),                                // 11: waves.events.StateUpdate.LeaseUpdate
	(*StateUpdate_DataEntryUpdate)(nil),                            // 12: waves.events.StateUpdate.DataEntryUpdate
	(*StateUpdate_AssetStateUpdate)(nil),                           // 13: waves.events.StateUpdate.AssetStateUpdate
	(*StateUpdate_AssetDetails)(nil),                               // 14: waves.events.StateUpdate.AssetDetails
	(*StateUpdate_AssetInfo)(nil),                                  // 15: waves.events.StateUpdate.AssetInfo
	(*StateUpdate_ScriptUpdate)(nil),                               // 16: waves.events.StateUpdate.ScriptUpdate
	(*StateUpdate_AssetDetails_AssetScriptInfo)(nil),               // 17: waves.events.StateUpdate.AssetDetails.AssetScriptInfo
	(*TransactionMetadata_TransferMetadata)(nil),                   // 18: waves.events.TransactionMetadata.TransferMetadata
	(*TransactionMetadata_MassTransferMetadata)(nil),               // 19: waves.events.TransactionMetadata.MassTransferMetadata
	(*TransactionMetadata_ExchangeMetadata)(nil),                   // 20: waves.events.TransactionMetadata.ExchangeMetadata
	(*TransactionMetadata_InvokeScriptMetadata)(nil),               // 21: waves.events.TransactionMetadata.InvokeScriptMetadata
	(*TransactionMetadata_LeaseMetadata)(nil),                      // 22: waves.events.TransactionMetadata.LeaseMetadata
	(*TransactionMetadata_EthereumTransferMetadata)(nil),           // 23: waves.events.TransactionMetadata.EthereumTransferMetadata
	(*TransactionMetadata_EthereumMetadata)(nil),                   // 24: waves.events.TransactionMetadata.EthereumMetadata
	(*TransactionMetadata_InvokeScriptMetadata_Argument)(nil),      // 25: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument
	(*TransactionMetadata_InvokeScriptMetadata_Argument_List)(nil), // 26: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List
	(*waves.Block)(nil),                                            // 27: waves.Block
	(*waves.RewardShare)(nil),                                      // 28: waves.RewardShare
	(*waves.SignedMicroBlock)(nil),                                 // 29: waves.SignedMicroBlock
	(*waves.Amount)(nil),                                           // 30: waves.Amount
	(*waves.DataEntry)(nil),                                        // 31: waves.DataEntry
	(*waves.InvokeScriptResult_Call_Argument)(nil),                 // 32: waves.InvokeScriptResult.Call.Argument
	(*waves.InvokeScriptResult)(nil),                               // 33: waves.InvokeScriptResult
}
var file_waves_events_events_proto_depIdxs = []int32{
	5,  // 0: waves.events.BlockchainUpdated.append:type_name -> waves.events.BlockchainUpdated.Append
	6,  // 1: waves.events.BlockchainUpdated.rollback:type_name -> waves.events.BlockchainUpdated.Rollback
	15, // 2: waves.events.BlockchainUpdated.referenced_assets:type_name -> waves.events.StateUpdate.AssetInfo
	9,  // 3: waves.events.StateUpdate.balances:type_name -> waves.events.StateUpdate.BalanceUpdate
	10, // 4: waves.events.StateUpdate.leasing_for_address:type_name -> waves.events.StateUpdate.LeasingUpdate
	12, // 5: waves.events.StateUpdate.data_entries:type_name -> waves.events.StateUpdate.DataEntryUpdate
	13, // 6: waves.events.StateUpdate.assets:type_name -> waves.events.StateUpdate.AssetStateUpdate
	11, // 7: waves.events.StateUpdate.individual_leases:type_name -> waves.events.StateUpdate.LeaseUpdate
	16, // 8: waves.events.StateUpdate.scripts:type_name -> waves.events.StateUpdate.ScriptUpdate
	18, // 9: waves.events.TransactionMetadata.transfer:type_name -> waves.events.TransactionMetadata.TransferMetadata
	20, // 10: waves.events.TransactionMetadata.exchange:type_name -> waves.events.TransactionMetadata.ExchangeMetadata
	19, // 11: waves.events.TransactionMetadata.mass_transfer:type_name -> waves.events.TransactionMetadata.MassTransferMetadata
	21, // 12: waves.events.TransactionMetadata.invoke_script:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata
	22, // 13: waves.events.TransactionMetadata.lease:type_name -> waves.events.TransactionMetadata.LeaseMetadata
	24, // 14: waves.events.TransactionMetadata.ethereum:type_name -> waves.events.TransactionMetadata.EthereumMetadata
	7,  // 15: waves.events.BlockchainUpdated.Append.block:type_name -> waves.events.BlockchainUpdated.Append.BlockAppend
	8,  // 16: waves.events.BlockchainUpdated.Append.micro_block:type_name -> waves.events.BlockchainUpdated.Append.MicroBlockAppend
	4,  // 17: waves.events.BlockchainUpdated.Append.transactions_metadata:type_name -> waves.events.TransactionMetadata
	3,  // 18: waves.events.BlockchainUpdated.Append.state_update:type_name -> waves.events.StateUpdate
	3,  // 19: waves.events.BlockchainUpdated.Append.transaction_state_updates:type_name -> waves.events.StateUpdate
	0,  // 20: waves.events.BlockchainUpdated.Rollback.type:type_name -> waves.events.BlockchainUpdated.Rollback.RollbackType
	27, // 21: waves.events.BlockchainUpdated.Rollback.removed_blocks:type_name -> waves.Block
	3,  // 22: waves.events.BlockchainUpdated.Rollback.rollback_state_update:type_name -> waves.events.StateUpdate
	27, // 23: waves.events.BlockchainUpdated.Append.BlockAppend.block:type_name -> waves.Block
	28, // 24: waves.events.BlockchainUpdated.Append.BlockAppend.reward_shares:type_name -> waves.RewardShare
	29, // 25: waves.events.BlockchainUpdated.Append.MicroBlockAppend.micro_block:type_name -> waves.SignedMicroBlock
	30, // 26: waves.events.StateUpdate.BalanceUpdate.amount_after:type_name -> waves.Amount
	1,  // 27: waves.events.StateUpdate.LeaseUpdate.status_after:type_name -> waves.events.StateUpdate.LeaseUpdate.LeaseStatus
	31, // 28: waves.events.StateUpdate.DataEntryUpdate.data_entry:type_name -> waves.DataEntry
	31, // 29: waves.events.StateUpdate.DataEntryUpdate.data_entry_before:type_name -> waves.DataEntry
	14, // 30: waves.events.StateUpdate.AssetStateUpdate.before:type_name -> waves.events.StateUpdate.AssetDetails
	14, // 31: waves.events.StateUpdate.AssetStateUpdate.after:type_name -> waves.events.StateUpdate.AssetDetails
	17, // 32: waves.events.StateUpdate.AssetDetails.script_info:type_name -> waves.events.StateUpdate.AssetDetails.AssetScriptInfo
	32, // 33: waves.events.TransactionMetadata.InvokeScriptMetadata.arguments:type_name -> waves.InvokeScriptResult.Call.Argument
	30, // 34: waves.events.TransactionMetadata.InvokeScriptMetadata.payments:type_name -> waves.Amount
	33, // 35: waves.events.TransactionMetadata.InvokeScriptMetadata.result:type_name -> waves.InvokeScriptResult
	30, // 36: waves.events.TransactionMetadata.EthereumTransferMetadata.amount:type_name -> waves.Amount
	23, // 37: waves.events.TransactionMetadata.EthereumMetadata.transfer:type_name -> waves.events.TransactionMetadata.EthereumTransferMetadata
	21, // 38: waves.events.TransactionMetadata.EthereumMetadata.invoke:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata
	26, // 39: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.list:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List
	25, // 40: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List.items:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata.Argument
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_waves_events_events_proto_init() }
func file_waves_events_events_proto_init() {
	if File_waves_events_events_proto != nil {
		return
	}
	file_waves_events_events_proto_msgTypes[0].OneofWrappers = []any{
		(*BlockchainUpdated_Append_)(nil),
		(*BlockchainUpdated_Rollback_)(nil),
	}
	file_waves_events_events_proto_msgTypes[2].OneofWrappers = []any{
		(*TransactionMetadata_Transfer)(nil),
		(*TransactionMetadata_Exchange)(nil),
		(*TransactionMetadata_MassTransfer)(nil),
		(*TransactionMetadata_InvokeScript)(nil),
		(*TransactionMetadata_Lease)(nil),
		(*TransactionMetadata_Ethereum)(nil),
	}
	file_waves_events_events_proto_msgTypes[3].OneofWrappers = []any{
		(*BlockchainUpdated_Append_Block)(nil),
		(*BlockchainUpdated_Append_MicroBlock)(nil),
	}
	file_waves_events_events_proto_msgTypes[22].OneofWrappers = []any{
		(*TransactionMetadata_EthereumMetadata_Transfer)(nil),
		(*TransactionMetadata_EthereumMetadata_Invoke)(nil),
	}
	file_waves_events_events_proto_msgTypes[23].OneofWrappers = []any{
		(*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_List_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waves_events_events_proto_rawDesc), len(file_waves_events_events_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_events_events_proto_goTypes,
		DependencyIndexes: file_waves_events_events_proto_depIdxs,
		EnumInfos:         file_waves_events_events_proto_enumTypes,
		MessageInfos:      file_waves_events_events_proto_msgTypes,
	}.Build()
	File_waves_events_events_proto = out.File
	file_waves_events_events_proto_goTypes = nil
	file_waves_events_events_proto_depIdxs = nil
}
