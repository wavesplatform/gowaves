// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: waves/events/events.proto

package events

import (
	waves "github.com/wavesplatform/gowaves/pkg/grpc/generated/waves"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockchainUpdated_Rollback_RollbackType int32

const (
	BlockchainUpdated_Rollback_BLOCK      BlockchainUpdated_Rollback_RollbackType = 0
	BlockchainUpdated_Rollback_MICROBLOCK BlockchainUpdated_Rollback_RollbackType = 1
)

// Enum value maps for BlockchainUpdated_Rollback_RollbackType.
var (
	BlockchainUpdated_Rollback_RollbackType_name = map[int32]string{
		0: "BLOCK",
		1: "MICROBLOCK",
	}
	BlockchainUpdated_Rollback_RollbackType_value = map[string]int32{
		"BLOCK":      0,
		"MICROBLOCK": 1,
	}
)

func (x BlockchainUpdated_Rollback_RollbackType) Enum() *BlockchainUpdated_Rollback_RollbackType {
	p := new(BlockchainUpdated_Rollback_RollbackType)
	*p = x
	return p
}

func (x BlockchainUpdated_Rollback_RollbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockchainUpdated_Rollback_RollbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_events_events_proto_enumTypes[0].Descriptor()
}

func (BlockchainUpdated_Rollback_RollbackType) Type() protoreflect.EnumType {
	return &file_waves_events_events_proto_enumTypes[0]
}

func (x BlockchainUpdated_Rollback_RollbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockchainUpdated_Rollback_RollbackType.Descriptor instead.
func (BlockchainUpdated_Rollback_RollbackType) EnumDescriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 1, 0}
}

type StateUpdate_LeaseUpdate_LeaseStatus int32

const (
	StateUpdate_LeaseUpdate_INACTIVE StateUpdate_LeaseUpdate_LeaseStatus = 0
	StateUpdate_LeaseUpdate_ACTIVE   StateUpdate_LeaseUpdate_LeaseStatus = 1
)

// Enum value maps for StateUpdate_LeaseUpdate_LeaseStatus.
var (
	StateUpdate_LeaseUpdate_LeaseStatus_name = map[int32]string{
		0: "INACTIVE",
		1: "ACTIVE",
	}
	StateUpdate_LeaseUpdate_LeaseStatus_value = map[string]int32{
		"INACTIVE": 0,
		"ACTIVE":   1,
	}
)

func (x StateUpdate_LeaseUpdate_LeaseStatus) Enum() *StateUpdate_LeaseUpdate_LeaseStatus {
	p := new(StateUpdate_LeaseUpdate_LeaseStatus)
	*p = x
	return p
}

func (x StateUpdate_LeaseUpdate_LeaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateUpdate_LeaseUpdate_LeaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_waves_events_events_proto_enumTypes[1].Descriptor()
}

func (StateUpdate_LeaseUpdate_LeaseStatus) Type() protoreflect.EnumType {
	return &file_waves_events_events_proto_enumTypes[1]
}

func (x StateUpdate_LeaseUpdate_LeaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateUpdate_LeaseUpdate_LeaseStatus.Descriptor instead.
func (StateUpdate_LeaseUpdate_LeaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 2, 0}
}

type BlockchainUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Types that are assignable to Update:
	//
	//	*BlockchainUpdated_Append_
	//	*BlockchainUpdated_Rollback_
	Update           isBlockchainUpdated_Update `protobuf_oneof:"update"`
	ReferencedAssets []*StateUpdate_AssetInfo   `protobuf:"bytes,21,rep,name=referenced_assets,json=referencedAssets,proto3" json:"referenced_assets,omitempty"`
}

func (x *BlockchainUpdated) Reset() {
	*x = BlockchainUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated) ProtoMessage() {}

func (x *BlockchainUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainUpdated) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BlockchainUpdated) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (m *BlockchainUpdated) GetUpdate() isBlockchainUpdated_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *BlockchainUpdated) GetAppend() *BlockchainUpdated_Append {
	if x, ok := x.GetUpdate().(*BlockchainUpdated_Append_); ok {
		return x.Append
	}
	return nil
}

func (x *BlockchainUpdated) GetRollback() *BlockchainUpdated_Rollback {
	if x, ok := x.GetUpdate().(*BlockchainUpdated_Rollback_); ok {
		return x.Rollback
	}
	return nil
}

func (x *BlockchainUpdated) GetReferencedAssets() []*StateUpdate_AssetInfo {
	if x != nil {
		return x.ReferencedAssets
	}
	return nil
}

type isBlockchainUpdated_Update interface {
	isBlockchainUpdated_Update()
}

type BlockchainUpdated_Append_ struct {
	Append *BlockchainUpdated_Append `protobuf:"bytes,11,opt,name=append,proto3,oneof"`
}

type BlockchainUpdated_Rollback_ struct {
	Rollback *BlockchainUpdated_Rollback `protobuf:"bytes,12,opt,name=rollback,proto3,oneof"`
}

func (*BlockchainUpdated_Append_) isBlockchainUpdated_Update() {}

func (*BlockchainUpdated_Rollback_) isBlockchainUpdated_Update() {}

type StateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances          []*StateUpdate_BalanceUpdate    `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	LeasingForAddress []*StateUpdate_LeasingUpdate    `protobuf:"bytes,2,rep,name=leasing_for_address,json=leasingForAddress,proto3" json:"leasing_for_address,omitempty"`
	DataEntries       []*StateUpdate_DataEntryUpdate  `protobuf:"bytes,3,rep,name=data_entries,json=dataEntries,proto3" json:"data_entries,omitempty"`
	Assets            []*StateUpdate_AssetStateUpdate `protobuf:"bytes,4,rep,name=assets,proto3" json:"assets,omitempty"`
	IndividualLeases  []*StateUpdate_LeaseUpdate      `protobuf:"bytes,5,rep,name=individual_leases,json=individualLeases,proto3" json:"individual_leases,omitempty"`
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *StateUpdate) GetBalances() []*StateUpdate_BalanceUpdate {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *StateUpdate) GetLeasingForAddress() []*StateUpdate_LeasingUpdate {
	if x != nil {
		return x.LeasingForAddress
	}
	return nil
}

func (x *StateUpdate) GetDataEntries() []*StateUpdate_DataEntryUpdate {
	if x != nil {
		return x.DataEntries
	}
	return nil
}

func (x *StateUpdate) GetAssets() []*StateUpdate_AssetStateUpdate {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *StateUpdate) GetIndividualLeases() []*StateUpdate_LeaseUpdate {
	if x != nil {
		return x.IndividualLeases
	}
	return nil
}

type TransactionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress []byte `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*TransactionMetadata_Transfer
	//	*TransactionMetadata_Exchange
	//	*TransactionMetadata_MassTransfer
	//	*TransactionMetadata_InvokeScript
	//	*TransactionMetadata_Lease
	//	*TransactionMetadata_Ethereum
	Metadata isTransactionMetadata_Metadata `protobuf_oneof:"metadata"`
}

func (x *TransactionMetadata) Reset() {
	*x = TransactionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata) ProtoMessage() {}

func (x *TransactionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionMetadata) GetSenderAddress() []byte {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

func (m *TransactionMetadata) GetMetadata() isTransactionMetadata_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *TransactionMetadata) GetTransfer() *TransactionMetadata_TransferMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *TransactionMetadata) GetExchange() *TransactionMetadata_ExchangeMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_Exchange); ok {
		return x.Exchange
	}
	return nil
}

func (x *TransactionMetadata) GetMassTransfer() *TransactionMetadata_MassTransferMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_MassTransfer); ok {
		return x.MassTransfer
	}
	return nil
}

func (x *TransactionMetadata) GetInvokeScript() *TransactionMetadata_InvokeScriptMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_InvokeScript); ok {
		return x.InvokeScript
	}
	return nil
}

func (x *TransactionMetadata) GetLease() *TransactionMetadata_LeaseMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_Lease); ok {
		return x.Lease
	}
	return nil
}

func (x *TransactionMetadata) GetEthereum() *TransactionMetadata_EthereumMetadata {
	if x, ok := x.GetMetadata().(*TransactionMetadata_Ethereum); ok {
		return x.Ethereum
	}
	return nil
}

type isTransactionMetadata_Metadata interface {
	isTransactionMetadata_Metadata()
}

type TransactionMetadata_Transfer struct {
	Transfer *TransactionMetadata_TransferMetadata `protobuf:"bytes,104,opt,name=transfer,proto3,oneof"`
}

type TransactionMetadata_Exchange struct {
	Exchange *TransactionMetadata_ExchangeMetadata `protobuf:"bytes,107,opt,name=exchange,proto3,oneof"`
}

type TransactionMetadata_MassTransfer struct {
	MassTransfer *TransactionMetadata_MassTransferMetadata `protobuf:"bytes,111,opt,name=mass_transfer,json=massTransfer,proto3,oneof"`
}

type TransactionMetadata_InvokeScript struct {
	InvokeScript *TransactionMetadata_InvokeScriptMetadata `protobuf:"bytes,116,opt,name=invoke_script,json=invokeScript,proto3,oneof"`
}

type TransactionMetadata_Lease struct {
	Lease *TransactionMetadata_LeaseMetadata `protobuf:"bytes,117,opt,name=lease,proto3,oneof"`
}

type TransactionMetadata_Ethereum struct {
	Ethereum *TransactionMetadata_EthereumMetadata `protobuf:"bytes,301,opt,name=ethereum,proto3,oneof"`
}

func (*TransactionMetadata_Transfer) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Exchange) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_MassTransfer) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_InvokeScript) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Lease) isTransactionMetadata_Metadata() {}

func (*TransactionMetadata_Ethereum) isTransactionMetadata_Metadata() {}

type BlockchainUpdated_Append struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//
	//	*BlockchainUpdated_Append_Block
	//	*BlockchainUpdated_Append_MicroBlock
	Body                    isBlockchainUpdated_Append_Body `protobuf_oneof:"body"`
	TransactionIds          [][]byte                        `protobuf:"bytes,3,rep,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	TransactionsMetadata    []*TransactionMetadata          `protobuf:"bytes,4,rep,name=transactions_metadata,json=transactionsMetadata,proto3" json:"transactions_metadata,omitempty"`
	StateUpdate             *StateUpdate                    `protobuf:"bytes,11,opt,name=state_update,json=stateUpdate,proto3" json:"state_update,omitempty"`
	TransactionStateUpdates []*StateUpdate                  `protobuf:"bytes,12,rep,name=transaction_state_updates,json=transactionStateUpdates,proto3" json:"transaction_state_updates,omitempty"`
}

func (x *BlockchainUpdated_Append) Reset() {
	*x = BlockchainUpdated_Append{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainUpdated_Append) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append) ProtoMessage() {}

func (x *BlockchainUpdated_Append) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0}
}

func (m *BlockchainUpdated_Append) GetBody() isBlockchainUpdated_Append_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetBlock() *BlockchainUpdated_Append_BlockAppend {
	if x, ok := x.GetBody().(*BlockchainUpdated_Append_Block); ok {
		return x.Block
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetMicroBlock() *BlockchainUpdated_Append_MicroBlockAppend {
	if x, ok := x.GetBody().(*BlockchainUpdated_Append_MicroBlock); ok {
		return x.MicroBlock
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionIds() [][]byte {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionsMetadata() []*TransactionMetadata {
	if x != nil {
		return x.TransactionsMetadata
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetStateUpdate() *StateUpdate {
	if x != nil {
		return x.StateUpdate
	}
	return nil
}

func (x *BlockchainUpdated_Append) GetTransactionStateUpdates() []*StateUpdate {
	if x != nil {
		return x.TransactionStateUpdates
	}
	return nil
}

type isBlockchainUpdated_Append_Body interface {
	isBlockchainUpdated_Append_Body()
}

type BlockchainUpdated_Append_Block struct {
	Block *BlockchainUpdated_Append_BlockAppend `protobuf:"bytes,1,opt,name=block,proto3,oneof"`
}

type BlockchainUpdated_Append_MicroBlock struct {
	MicroBlock *BlockchainUpdated_Append_MicroBlockAppend `protobuf:"bytes,2,opt,name=micro_block,json=microBlock,proto3,oneof"`
}

func (*BlockchainUpdated_Append_Block) isBlockchainUpdated_Append_Body() {}

func (*BlockchainUpdated_Append_MicroBlock) isBlockchainUpdated_Append_Body() {}

type BlockchainUpdated_Rollback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                  BlockchainUpdated_Rollback_RollbackType `protobuf:"varint,1,opt,name=type,proto3,enum=waves.events.BlockchainUpdated_Rollback_RollbackType" json:"type,omitempty"`
	RemovedTransactionIds [][]byte                                `protobuf:"bytes,2,rep,name=removed_transaction_ids,json=removedTransactionIds,proto3" json:"removed_transaction_ids,omitempty"`
	RemovedBlocks         []*waves.Block                          `protobuf:"bytes,3,rep,name=removed_blocks,json=removedBlocks,proto3" json:"removed_blocks,omitempty"`
	RollbackStateUpdate   *StateUpdate                            `protobuf:"bytes,4,opt,name=rollback_state_update,json=rollbackStateUpdate,proto3" json:"rollback_state_update,omitempty"`
}

func (x *BlockchainUpdated_Rollback) Reset() {
	*x = BlockchainUpdated_Rollback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainUpdated_Rollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Rollback) ProtoMessage() {}

func (x *BlockchainUpdated_Rollback) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Rollback.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Rollback) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BlockchainUpdated_Rollback) GetType() BlockchainUpdated_Rollback_RollbackType {
	if x != nil {
		return x.Type
	}
	return BlockchainUpdated_Rollback_BLOCK
}

func (x *BlockchainUpdated_Rollback) GetRemovedTransactionIds() [][]byte {
	if x != nil {
		return x.RemovedTransactionIds
	}
	return nil
}

func (x *BlockchainUpdated_Rollback) GetRemovedBlocks() []*waves.Block {
	if x != nil {
		return x.RemovedBlocks
	}
	return nil
}

func (x *BlockchainUpdated_Rollback) GetRollbackStateUpdate() *StateUpdate {
	if x != nil {
		return x.RollbackStateUpdate
	}
	return nil
}

type BlockchainUpdated_Append_BlockAppend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block              *waves.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	UpdatedWavesAmount int64        `protobuf:"varint,2,opt,name=updated_waves_amount,json=updatedWavesAmount,proto3" json:"updated_waves_amount,omitempty"`
}

func (x *BlockchainUpdated_Append_BlockAppend) Reset() {
	*x = BlockchainUpdated_Append_BlockAppend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainUpdated_Append_BlockAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append_BlockAppend) ProtoMessage() {}

func (x *BlockchainUpdated_Append_BlockAppend) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append_BlockAppend.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append_BlockAppend) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *BlockchainUpdated_Append_BlockAppend) GetBlock() *waves.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockchainUpdated_Append_BlockAppend) GetUpdatedWavesAmount() int64 {
	if x != nil {
		return x.UpdatedWavesAmount
	}
	return 0
}

type BlockchainUpdated_Append_MicroBlockAppend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MicroBlock              *waves.SignedMicroBlock `protobuf:"bytes,1,opt,name=micro_block,json=microBlock,proto3" json:"micro_block,omitempty"`
	UpdatedTransactionsRoot []byte                  `protobuf:"bytes,2,opt,name=updated_transactions_root,json=updatedTransactionsRoot,proto3" json:"updated_transactions_root,omitempty"`
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) Reset() {
	*x = BlockchainUpdated_Append_MicroBlockAppend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainUpdated_Append_MicroBlockAppend) ProtoMessage() {}

func (x *BlockchainUpdated_Append_MicroBlockAppend) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainUpdated_Append_MicroBlockAppend.ProtoReflect.Descriptor instead.
func (*BlockchainUpdated_Append_MicroBlockAppend) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) GetMicroBlock() *waves.SignedMicroBlock {
	if x != nil {
		return x.MicroBlock
	}
	return nil
}

func (x *BlockchainUpdated_Append_MicroBlockAppend) GetUpdatedTransactionsRoot() []byte {
	if x != nil {
		return x.UpdatedTransactionsRoot
	}
	return nil
}

type StateUpdate_BalanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      []byte        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AmountAfter  *waves.Amount `protobuf:"bytes,2,opt,name=amount_after,json=amountAfter,proto3" json:"amount_after,omitempty"`
	AmountBefore int64         `protobuf:"varint,3,opt,name=amount_before,json=amountBefore,proto3" json:"amount_before,omitempty"`
}

func (x *StateUpdate_BalanceUpdate) Reset() {
	*x = StateUpdate_BalanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_BalanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_BalanceUpdate) ProtoMessage() {}

func (x *StateUpdate_BalanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_BalanceUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_BalanceUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StateUpdate_BalanceUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_BalanceUpdate) GetAmountAfter() *waves.Amount {
	if x != nil {
		return x.AmountAfter
	}
	return nil
}

func (x *StateUpdate_BalanceUpdate) GetAmountBefore() int64 {
	if x != nil {
		return x.AmountBefore
	}
	return 0
}

type StateUpdate_LeasingUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	InAfter   int64  `protobuf:"varint,2,opt,name=in_after,json=inAfter,proto3" json:"in_after,omitempty"`
	OutAfter  int64  `protobuf:"varint,3,opt,name=out_after,json=outAfter,proto3" json:"out_after,omitempty"`
	InBefore  int64  `protobuf:"varint,4,opt,name=in_before,json=inBefore,proto3" json:"in_before,omitempty"`
	OutBefore int64  `protobuf:"varint,5,opt,name=out_before,json=outBefore,proto3" json:"out_before,omitempty"`
}

func (x *StateUpdate_LeasingUpdate) Reset() {
	*x = StateUpdate_LeasingUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_LeasingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_LeasingUpdate) ProtoMessage() {}

func (x *StateUpdate_LeasingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_LeasingUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_LeasingUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StateUpdate_LeasingUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_LeasingUpdate) GetInAfter() int64 {
	if x != nil {
		return x.InAfter
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetOutAfter() int64 {
	if x != nil {
		return x.OutAfter
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetInBefore() int64 {
	if x != nil {
		return x.InBefore
	}
	return 0
}

func (x *StateUpdate_LeasingUpdate) GetOutBefore() int64 {
	if x != nil {
		return x.OutBefore
	}
	return 0
}

type StateUpdate_LeaseUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaseId             []byte                              `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	StatusAfter         StateUpdate_LeaseUpdate_LeaseStatus `protobuf:"varint,2,opt,name=status_after,json=statusAfter,proto3,enum=waves.events.StateUpdate_LeaseUpdate_LeaseStatus" json:"status_after,omitempty"`
	Amount              int64                               `protobuf:"varint,10,opt,name=amount,proto3" json:"amount,omitempty"`
	Sender              []byte                              `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient           []byte                              `protobuf:"bytes,12,opt,name=recipient,proto3" json:"recipient,omitempty"`
	OriginTransactionId []byte                              `protobuf:"bytes,13,opt,name=origin_transaction_id,json=originTransactionId,proto3" json:"origin_transaction_id,omitempty"`
}

func (x *StateUpdate_LeaseUpdate) Reset() {
	*x = StateUpdate_LeaseUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_LeaseUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_LeaseUpdate) ProtoMessage() {}

func (x *StateUpdate_LeaseUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_LeaseUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_LeaseUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StateUpdate_LeaseUpdate) GetLeaseId() []byte {
	if x != nil {
		return x.LeaseId
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetStatusAfter() StateUpdate_LeaseUpdate_LeaseStatus {
	if x != nil {
		return x.StatusAfter
	}
	return StateUpdate_LeaseUpdate_INACTIVE
}

func (x *StateUpdate_LeaseUpdate) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StateUpdate_LeaseUpdate) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *StateUpdate_LeaseUpdate) GetOriginTransactionId() []byte {
	if x != nil {
		return x.OriginTransactionId
	}
	return nil
}

type StateUpdate_DataEntryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         []byte                               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DataEntry       *waves.DataTransactionData_DataEntry `protobuf:"bytes,2,opt,name=data_entry,json=dataEntry,proto3" json:"data_entry,omitempty"`
	DataEntryBefore *waves.DataTransactionData_DataEntry `protobuf:"bytes,10,opt,name=data_entry_before,json=dataEntryBefore,proto3" json:"data_entry_before,omitempty"`
}

func (x *StateUpdate_DataEntryUpdate) Reset() {
	*x = StateUpdate_DataEntryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_DataEntryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_DataEntryUpdate) ProtoMessage() {}

func (x *StateUpdate_DataEntryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_DataEntryUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_DataEntryUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 3}
}

func (x *StateUpdate_DataEntryUpdate) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StateUpdate_DataEntryUpdate) GetDataEntry() *waves.DataTransactionData_DataEntry {
	if x != nil {
		return x.DataEntry
	}
	return nil
}

func (x *StateUpdate_DataEntryUpdate) GetDataEntryBefore() *waves.DataTransactionData_DataEntry {
	if x != nil {
		return x.DataEntryBefore
	}
	return nil
}

type StateUpdate_AssetStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *StateUpdate_AssetDetails `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *StateUpdate_AssetDetails `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *StateUpdate_AssetStateUpdate) Reset() {
	*x = StateUpdate_AssetStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_AssetStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetStateUpdate) ProtoMessage() {}

func (x *StateUpdate_AssetStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetStateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetStateUpdate) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 4}
}

func (x *StateUpdate_AssetStateUpdate) GetBefore() *StateUpdate_AssetDetails {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *StateUpdate_AssetStateUpdate) GetAfter() *StateUpdate_AssetDetails {
	if x != nil {
		return x.After
	}
	return nil
}

type StateUpdate_AssetDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId     []byte                                    `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Issuer      []byte                                    `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Decimals    int32                                     `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Name        string                                    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Reissuable  bool                                      `protobuf:"varint,6,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	Volume      int64                                     `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	ScriptInfo  *StateUpdate_AssetDetails_AssetScriptInfo `protobuf:"bytes,8,opt,name=script_info,json=scriptInfo,proto3" json:"script_info,omitempty"`
	Sponsorship int64                                     `protobuf:"varint,9,opt,name=sponsorship,proto3" json:"sponsorship,omitempty"`
	Nft         bool                                      `protobuf:"varint,10,opt,name=nft,proto3" json:"nft,omitempty"`
	LastUpdated int32                                     `protobuf:"varint,11,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// Related to a past behavior in the blockchain when it was possible to reissue
	// assets so that the total volume became more then int64 max value.
	// This field represents accurate volume even for those assets.
	// Can be ignored if the target system does not need such accuracy.
	// Encoding: like Java BigInteger, https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#toByteArray()
	SafeVolume []byte `protobuf:"bytes,20,opt,name=safe_volume,json=safeVolume,proto3" json:"safe_volume,omitempty"`
}

func (x *StateUpdate_AssetDetails) Reset() {
	*x = StateUpdate_AssetDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_AssetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetDetails) ProtoMessage() {}

func (x *StateUpdate_AssetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetDetails.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetDetails) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 5}
}

func (x *StateUpdate_AssetDetails) GetAssetId() []byte {
	if x != nil {
		return x.AssetId
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetIssuer() []byte {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateUpdate_AssetDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StateUpdate_AssetDetails) GetReissuable() bool {
	if x != nil {
		return x.Reissuable
	}
	return false
}

func (x *StateUpdate_AssetDetails) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetScriptInfo() *StateUpdate_AssetDetails_AssetScriptInfo {
	if x != nil {
		return x.ScriptInfo
	}
	return nil
}

func (x *StateUpdate_AssetDetails) GetSponsorship() int64 {
	if x != nil {
		return x.Sponsorship
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetNft() bool {
	if x != nil {
		return x.Nft
	}
	return false
}

func (x *StateUpdate_AssetDetails) GetLastUpdated() int32 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *StateUpdate_AssetDetails) GetSafeVolume() []byte {
	if x != nil {
		return x.SafeVolume
	}
	return nil
}

type StateUpdate_AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Decimals int32  `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StateUpdate_AssetInfo) Reset() {
	*x = StateUpdate_AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetInfo) ProtoMessage() {}

func (x *StateUpdate_AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetInfo.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetInfo) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 6}
}

func (x *StateUpdate_AssetInfo) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StateUpdate_AssetInfo) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *StateUpdate_AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StateUpdate_AssetDetails_AssetScriptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script     []byte `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Complexity int64  `protobuf:"varint,2,opt,name=complexity,proto3" json:"complexity,omitempty"`
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) Reset() {
	*x = StateUpdate_AssetDetails_AssetScriptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate_AssetDetails_AssetScriptInfo) ProtoMessage() {}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate_AssetDetails_AssetScriptInfo.ProtoReflect.Descriptor instead.
func (*StateUpdate_AssetDetails_AssetScriptInfo) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{1, 5, 0}
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *StateUpdate_AssetDetails_AssetScriptInfo) GetComplexity() int64 {
	if x != nil {
		return x.Complexity
	}
	return 0
}

type TransactionMetadata_TransferMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientAddress []byte `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
}

func (x *TransactionMetadata_TransferMetadata) Reset() {
	*x = TransactionMetadata_TransferMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_TransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_TransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_TransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_TransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_TransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TransactionMetadata_TransferMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

type TransactionMetadata_MassTransferMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientsAddresses [][]byte `protobuf:"bytes,1,rep,name=recipients_addresses,json=recipientsAddresses,proto3" json:"recipients_addresses,omitempty"`
}

func (x *TransactionMetadata_MassTransferMetadata) Reset() {
	*x = TransactionMetadata_MassTransferMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_MassTransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_MassTransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_MassTransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_MassTransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_MassTransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TransactionMetadata_MassTransferMetadata) GetRecipientsAddresses() [][]byte {
	if x != nil {
		return x.RecipientsAddresses
	}
	return nil
}

type TransactionMetadata_ExchangeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields starting with `order_*` represent order metadata.
	// Each of them is a collection of exactly 2 elements.
	// Element indexes correspond to their parent order indexes in the exchange transaction.
	OrderIds              [][]byte `protobuf:"bytes,1,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
	OrderSenderAddresses  [][]byte `protobuf:"bytes,2,rep,name=order_sender_addresses,json=orderSenderAddresses,proto3" json:"order_sender_addresses,omitempty"`
	OrderSenderPublicKeys [][]byte `protobuf:"bytes,3,rep,name=order_sender_public_keys,json=orderSenderPublicKeys,proto3" json:"order_sender_public_keys,omitempty"`
}

func (x *TransactionMetadata_ExchangeMetadata) Reset() {
	*x = TransactionMetadata_ExchangeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_ExchangeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_ExchangeMetadata) ProtoMessage() {}

func (x *TransactionMetadata_ExchangeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_ExchangeMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_ExchangeMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 2}
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderIds() [][]byte {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderSenderAddresses() [][]byte {
	if x != nil {
		return x.OrderSenderAddresses
	}
	return nil
}

func (x *TransactionMetadata_ExchangeMetadata) GetOrderSenderPublicKeys() [][]byte {
	if x != nil {
		return x.OrderSenderPublicKeys
	}
	return nil
}

type TransactionMetadata_InvokeScriptMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DAppAddress  []byte                                    `protobuf:"bytes,1,opt,name=d_app_address,json=dAppAddress,proto3" json:"d_app_address,omitempty"`
	FunctionName string                                    `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Arguments    []*waves.InvokeScriptResult_Call_Argument `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Payments     []*waves.Amount                           `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Result       *waves.InvokeScriptResult                 `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TransactionMetadata_InvokeScriptMetadata) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_InvokeScriptMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3}
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetDAppAddress() []byte {
	if x != nil {
		return x.DAppAddress
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetArguments() []*waves.InvokeScriptResult_Call_Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetPayments() []*waves.Amount {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata) GetResult() *waves.InvokeScriptResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TransactionMetadata_LeaseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientAddress []byte `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
}

func (x *TransactionMetadata_LeaseMetadata) Reset() {
	*x = TransactionMetadata_LeaseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_LeaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_LeaseMetadata) ProtoMessage() {}

func (x *TransactionMetadata_LeaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_LeaseMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_LeaseMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 4}
}

func (x *TransactionMetadata_LeaseMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

type TransactionMetadata_EthereumTransferMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientAddress []byte        `protobuf:"bytes,1,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	Amount           *waves.Amount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransactionMetadata_EthereumTransferMetadata) Reset() {
	*x = TransactionMetadata_EthereumTransferMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_EthereumTransferMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_EthereumTransferMetadata) ProtoMessage() {}

func (x *TransactionMetadata_EthereumTransferMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_EthereumTransferMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_EthereumTransferMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 5}
}

func (x *TransactionMetadata_EthereumTransferMetadata) GetRecipientAddress() []byte {
	if x != nil {
		return x.RecipientAddress
	}
	return nil
}

func (x *TransactionMetadata_EthereumTransferMetadata) GetAmount() *waves.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TransactionMetadata_EthereumMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bytes sender_address = 1;
	Timestamp       int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fee             int64  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	SenderPublicKey []byte `protobuf:"bytes,4,opt,name=sender_public_key,json=senderPublicKey,proto3" json:"sender_public_key,omitempty"`
	// Types that are assignable to Action:
	//
	//	*TransactionMetadata_EthereumMetadata_Transfer
	//	*TransactionMetadata_EthereumMetadata_Invoke
	Action isTransactionMetadata_EthereumMetadata_Action `protobuf_oneof:"Action"`
}

func (x *TransactionMetadata_EthereumMetadata) Reset() {
	*x = TransactionMetadata_EthereumMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_EthereumMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_EthereumMetadata) ProtoMessage() {}

func (x *TransactionMetadata_EthereumMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_EthereumMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_EthereumMetadata) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 6}
}

func (x *TransactionMetadata_EthereumMetadata) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionMetadata_EthereumMetadata) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionMetadata_EthereumMetadata) GetSenderPublicKey() []byte {
	if x != nil {
		return x.SenderPublicKey
	}
	return nil
}

func (m *TransactionMetadata_EthereumMetadata) GetAction() isTransactionMetadata_EthereumMetadata_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *TransactionMetadata_EthereumMetadata) GetTransfer() *TransactionMetadata_EthereumTransferMetadata {
	if x, ok := x.GetAction().(*TransactionMetadata_EthereumMetadata_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *TransactionMetadata_EthereumMetadata) GetInvoke() *TransactionMetadata_InvokeScriptMetadata {
	if x, ok := x.GetAction().(*TransactionMetadata_EthereumMetadata_Invoke); ok {
		return x.Invoke
	}
	return nil
}

type isTransactionMetadata_EthereumMetadata_Action interface {
	isTransactionMetadata_EthereumMetadata_Action()
}

type TransactionMetadata_EthereumMetadata_Transfer struct {
	Transfer *TransactionMetadata_EthereumTransferMetadata `protobuf:"bytes,10,opt,name=transfer,proto3,oneof"`
}

type TransactionMetadata_EthereumMetadata_Invoke struct {
	Invoke *TransactionMetadata_InvokeScriptMetadata `protobuf:"bytes,11,opt,name=invoke,proto3,oneof"`
}

func (*TransactionMetadata_EthereumMetadata_Transfer) isTransactionMetadata_EthereumMetadata_Action() {
}

func (*TransactionMetadata_EthereumMetadata_Invoke) isTransactionMetadata_EthereumMetadata_Action() {}

type TransactionMetadata_InvokeScriptMetadata_Argument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue
	//	*TransactionMetadata_InvokeScriptMetadata_Argument_List_
	Value isTransactionMetadata_InvokeScriptMetadata_Argument_Value `protobuf_oneof:"value"`
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata_Argument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata_Argument.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata_Argument) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (m *TransactionMetadata_InvokeScriptMetadata_Argument) GetValue() isTransactionMetadata_InvokeScriptMetadata_Argument_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetIntegerValue() int64 {
	if x, ok := x.GetValue().(*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetBinaryValue() []byte {
	if x, ok := x.GetValue().(*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue); ok {
		return x.BinaryValue
	}
	return nil
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetStringValue() string {
	if x, ok := x.GetValue().(*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetBooleanValue() bool {
	if x, ok := x.GetValue().(*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument) GetList() *TransactionMetadata_InvokeScriptMetadata_Argument_List {
	if x, ok := x.GetValue().(*TransactionMetadata_InvokeScriptMetadata_Argument_List_); ok {
		return x.List
	}
	return nil
}

type isTransactionMetadata_InvokeScriptMetadata_Argument_Value interface {
	isTransactionMetadata_InvokeScriptMetadata_Argument_Value()
}

type TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,1,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,2,opt,name=binary_value,json=binaryValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,4,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type TransactionMetadata_InvokeScriptMetadata_Argument_List_ struct {
	List *TransactionMetadata_InvokeScriptMetadata_Argument_List `protobuf:"bytes,10,opt,name=list,proto3,oneof"`
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_List_) isTransactionMetadata_InvokeScriptMetadata_Argument_Value() {
}

type TransactionMetadata_InvokeScriptMetadata_Argument_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TransactionMetadata_InvokeScriptMetadata_Argument `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) Reset() {
	*x = TransactionMetadata_InvokeScriptMetadata_Argument_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_waves_events_events_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata_InvokeScriptMetadata_Argument_List) ProtoMessage() {}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) ProtoReflect() protoreflect.Message {
	mi := &file_waves_events_events_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata_InvokeScriptMetadata_Argument_List.ProtoReflect.Descriptor instead.
func (*TransactionMetadata_InvokeScriptMetadata_Argument_List) Descriptor() ([]byte, []int) {
	return file_waves_events_events_proto_rawDescGZIP(), []int{2, 3, 0, 0}
}

func (x *TransactionMetadata_InvokeScriptMetadata_Argument_List) GetItems() []*TransactionMetadata_InvokeScriptMetadata_Argument {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_waves_events_events_proto protoreflect.FileDescriptor

var file_waves_events_events_proto_rawDesc = []byte{
	0x0a, 0x19, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x11, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x0a, 0x0a, 0x11,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x50, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0xbe, 0x05, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x4a, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5a, 0x0a, 0x0b,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x56, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x63,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x76, 0x65, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x88, 0x01, 0x0a, 0x10, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x42, 0x06,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0xbc, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x17, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x13, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x29, 0x0a, 0x0c, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xef, 0x0e, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x13, 0x6c, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x73, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x73,
	0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4c, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x52, 0x0a, 0x11, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x30, 0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x9d, 0x01, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x73, 0x69,
	0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x75, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x75, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0xa9, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0b, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x1a, 0xc2, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x43, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x90, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0xe7, 0x03, 0x0a, 0x0c, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x69, 0x73, 0x73, 0x75, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x69, 0x73, 0x73, 0x75, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x6e, 0x66, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x66, 0x65,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73,
	0x61, 0x66, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0x49, 0x0a, 0x0f, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x1a, 0x4b, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xb8, 0x0f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x50, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x50, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x6b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x1a, 0x3f,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a,
	0x49, 0x0a, 0x14, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x13, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x9e, 0x01, 0x0a, 0x10, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xed, 0x04, 0x0a, 0x14,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x41, 0x70,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0xe6, 0x02, 0x0a, 0x08, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x25, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x5d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3c, 0x0a, 0x0d, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x6e, 0x0a, 0x18, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xa4, 0x02, 0x0a, 0x10, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06,
	0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x65, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x67, 0x6f, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x77, 0x61, 0x76, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_waves_events_events_proto_rawDescOnce sync.Once
	file_waves_events_events_proto_rawDescData = file_waves_events_events_proto_rawDesc
)

func file_waves_events_events_proto_rawDescGZIP() []byte {
	file_waves_events_events_proto_rawDescOnce.Do(func() {
		file_waves_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_waves_events_events_proto_rawDescData)
	})
	return file_waves_events_events_proto_rawDescData
}

var file_waves_events_events_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_waves_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_waves_events_events_proto_goTypes = []interface{}{
	(BlockchainUpdated_Rollback_RollbackType)(0),                   // 0: waves.events.BlockchainUpdated.Rollback.RollbackType
	(StateUpdate_LeaseUpdate_LeaseStatus)(0),                       // 1: waves.events.StateUpdate.LeaseUpdate.LeaseStatus
	(*BlockchainUpdated)(nil),                                      // 2: waves.events.BlockchainUpdated
	(*StateUpdate)(nil),                                            // 3: waves.events.StateUpdate
	(*TransactionMetadata)(nil),                                    // 4: waves.events.TransactionMetadata
	(*BlockchainUpdated_Append)(nil),                               // 5: waves.events.BlockchainUpdated.Append
	(*BlockchainUpdated_Rollback)(nil),                             // 6: waves.events.BlockchainUpdated.Rollback
	(*BlockchainUpdated_Append_BlockAppend)(nil),                   // 7: waves.events.BlockchainUpdated.Append.BlockAppend
	(*BlockchainUpdated_Append_MicroBlockAppend)(nil),              // 8: waves.events.BlockchainUpdated.Append.MicroBlockAppend
	(*StateUpdate_BalanceUpdate)(nil),                              // 9: waves.events.StateUpdate.BalanceUpdate
	(*StateUpdate_LeasingUpdate)(nil),                              // 10: waves.events.StateUpdate.LeasingUpdate
	(*StateUpdate_LeaseUpdate)(nil),                                // 11: waves.events.StateUpdate.LeaseUpdate
	(*StateUpdate_DataEntryUpdate)(nil),                            // 12: waves.events.StateUpdate.DataEntryUpdate
	(*StateUpdate_AssetStateUpdate)(nil),                           // 13: waves.events.StateUpdate.AssetStateUpdate
	(*StateUpdate_AssetDetails)(nil),                               // 14: waves.events.StateUpdate.AssetDetails
	(*StateUpdate_AssetInfo)(nil),                                  // 15: waves.events.StateUpdate.AssetInfo
	(*StateUpdate_AssetDetails_AssetScriptInfo)(nil),               // 16: waves.events.StateUpdate.AssetDetails.AssetScriptInfo
	(*TransactionMetadata_TransferMetadata)(nil),                   // 17: waves.events.TransactionMetadata.TransferMetadata
	(*TransactionMetadata_MassTransferMetadata)(nil),               // 18: waves.events.TransactionMetadata.MassTransferMetadata
	(*TransactionMetadata_ExchangeMetadata)(nil),                   // 19: waves.events.TransactionMetadata.ExchangeMetadata
	(*TransactionMetadata_InvokeScriptMetadata)(nil),               // 20: waves.events.TransactionMetadata.InvokeScriptMetadata
	(*TransactionMetadata_LeaseMetadata)(nil),                      // 21: waves.events.TransactionMetadata.LeaseMetadata
	(*TransactionMetadata_EthereumTransferMetadata)(nil),           // 22: waves.events.TransactionMetadata.EthereumTransferMetadata
	(*TransactionMetadata_EthereumMetadata)(nil),                   // 23: waves.events.TransactionMetadata.EthereumMetadata
	(*TransactionMetadata_InvokeScriptMetadata_Argument)(nil),      // 24: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument
	(*TransactionMetadata_InvokeScriptMetadata_Argument_List)(nil), // 25: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List
	(*waves.Block)(nil),                                            // 26: waves.Block
	(*waves.SignedMicroBlock)(nil),                                 // 27: waves.SignedMicroBlock
	(*waves.Amount)(nil),                                           // 28: waves.Amount
	(*waves.DataTransactionData_DataEntry)(nil),                    // 29: waves.DataTransactionData.DataEntry
	(*waves.InvokeScriptResult_Call_Argument)(nil),                 // 30: waves.InvokeScriptResult.Call.Argument
	(*waves.InvokeScriptResult)(nil),                               // 31: waves.InvokeScriptResult
}
var file_waves_events_events_proto_depIdxs = []int32{
	5,  // 0: waves.events.BlockchainUpdated.append:type_name -> waves.events.BlockchainUpdated.Append
	6,  // 1: waves.events.BlockchainUpdated.rollback:type_name -> waves.events.BlockchainUpdated.Rollback
	15, // 2: waves.events.BlockchainUpdated.referenced_assets:type_name -> waves.events.StateUpdate.AssetInfo
	9,  // 3: waves.events.StateUpdate.balances:type_name -> waves.events.StateUpdate.BalanceUpdate
	10, // 4: waves.events.StateUpdate.leasing_for_address:type_name -> waves.events.StateUpdate.LeasingUpdate
	12, // 5: waves.events.StateUpdate.data_entries:type_name -> waves.events.StateUpdate.DataEntryUpdate
	13, // 6: waves.events.StateUpdate.assets:type_name -> waves.events.StateUpdate.AssetStateUpdate
	11, // 7: waves.events.StateUpdate.individual_leases:type_name -> waves.events.StateUpdate.LeaseUpdate
	17, // 8: waves.events.TransactionMetadata.transfer:type_name -> waves.events.TransactionMetadata.TransferMetadata
	19, // 9: waves.events.TransactionMetadata.exchange:type_name -> waves.events.TransactionMetadata.ExchangeMetadata
	18, // 10: waves.events.TransactionMetadata.mass_transfer:type_name -> waves.events.TransactionMetadata.MassTransferMetadata
	20, // 11: waves.events.TransactionMetadata.invoke_script:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata
	21, // 12: waves.events.TransactionMetadata.lease:type_name -> waves.events.TransactionMetadata.LeaseMetadata
	23, // 13: waves.events.TransactionMetadata.ethereum:type_name -> waves.events.TransactionMetadata.EthereumMetadata
	7,  // 14: waves.events.BlockchainUpdated.Append.block:type_name -> waves.events.BlockchainUpdated.Append.BlockAppend
	8,  // 15: waves.events.BlockchainUpdated.Append.micro_block:type_name -> waves.events.BlockchainUpdated.Append.MicroBlockAppend
	4,  // 16: waves.events.BlockchainUpdated.Append.transactions_metadata:type_name -> waves.events.TransactionMetadata
	3,  // 17: waves.events.BlockchainUpdated.Append.state_update:type_name -> waves.events.StateUpdate
	3,  // 18: waves.events.BlockchainUpdated.Append.transaction_state_updates:type_name -> waves.events.StateUpdate
	0,  // 19: waves.events.BlockchainUpdated.Rollback.type:type_name -> waves.events.BlockchainUpdated.Rollback.RollbackType
	26, // 20: waves.events.BlockchainUpdated.Rollback.removed_blocks:type_name -> waves.Block
	3,  // 21: waves.events.BlockchainUpdated.Rollback.rollback_state_update:type_name -> waves.events.StateUpdate
	26, // 22: waves.events.BlockchainUpdated.Append.BlockAppend.block:type_name -> waves.Block
	27, // 23: waves.events.BlockchainUpdated.Append.MicroBlockAppend.micro_block:type_name -> waves.SignedMicroBlock
	28, // 24: waves.events.StateUpdate.BalanceUpdate.amount_after:type_name -> waves.Amount
	1,  // 25: waves.events.StateUpdate.LeaseUpdate.status_after:type_name -> waves.events.StateUpdate.LeaseUpdate.LeaseStatus
	29, // 26: waves.events.StateUpdate.DataEntryUpdate.data_entry:type_name -> waves.DataTransactionData.DataEntry
	29, // 27: waves.events.StateUpdate.DataEntryUpdate.data_entry_before:type_name -> waves.DataTransactionData.DataEntry
	14, // 28: waves.events.StateUpdate.AssetStateUpdate.before:type_name -> waves.events.StateUpdate.AssetDetails
	14, // 29: waves.events.StateUpdate.AssetStateUpdate.after:type_name -> waves.events.StateUpdate.AssetDetails
	16, // 30: waves.events.StateUpdate.AssetDetails.script_info:type_name -> waves.events.StateUpdate.AssetDetails.AssetScriptInfo
	30, // 31: waves.events.TransactionMetadata.InvokeScriptMetadata.arguments:type_name -> waves.InvokeScriptResult.Call.Argument
	28, // 32: waves.events.TransactionMetadata.InvokeScriptMetadata.payments:type_name -> waves.Amount
	31, // 33: waves.events.TransactionMetadata.InvokeScriptMetadata.result:type_name -> waves.InvokeScriptResult
	28, // 34: waves.events.TransactionMetadata.EthereumTransferMetadata.amount:type_name -> waves.Amount
	22, // 35: waves.events.TransactionMetadata.EthereumMetadata.transfer:type_name -> waves.events.TransactionMetadata.EthereumTransferMetadata
	20, // 36: waves.events.TransactionMetadata.EthereumMetadata.invoke:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata
	25, // 37: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.list:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List
	24, // 38: waves.events.TransactionMetadata.InvokeScriptMetadata.Argument.List.items:type_name -> waves.events.TransactionMetadata.InvokeScriptMetadata.Argument
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_waves_events_events_proto_init() }
func file_waves_events_events_proto_init() {
	if File_waves_events_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_waves_events_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainUpdated_Append); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainUpdated_Rollback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainUpdated_Append_BlockAppend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainUpdated_Append_MicroBlockAppend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_BalanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_LeasingUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_LeaseUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_DataEntryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_AssetStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_AssetDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate_AssetDetails_AssetScriptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_TransferMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_MassTransferMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_ExchangeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_InvokeScriptMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_LeaseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_EthereumTransferMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_EthereumMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_InvokeScriptMetadata_Argument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_waves_events_events_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMetadata_InvokeScriptMetadata_Argument_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_waves_events_events_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BlockchainUpdated_Append_)(nil),
		(*BlockchainUpdated_Rollback_)(nil),
	}
	file_waves_events_events_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TransactionMetadata_Transfer)(nil),
		(*TransactionMetadata_Exchange)(nil),
		(*TransactionMetadata_MassTransfer)(nil),
		(*TransactionMetadata_InvokeScript)(nil),
		(*TransactionMetadata_Lease)(nil),
		(*TransactionMetadata_Ethereum)(nil),
	}
	file_waves_events_events_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BlockchainUpdated_Append_Block)(nil),
		(*BlockchainUpdated_Append_MicroBlock)(nil),
	}
	file_waves_events_events_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*TransactionMetadata_EthereumMetadata_Transfer)(nil),
		(*TransactionMetadata_EthereumMetadata_Invoke)(nil),
	}
	file_waves_events_events_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*TransactionMetadata_InvokeScriptMetadata_Argument_IntegerValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_BinaryValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_StringValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_BooleanValue)(nil),
		(*TransactionMetadata_InvokeScriptMetadata_Argument_List_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_waves_events_events_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waves_events_events_proto_goTypes,
		DependencyIndexes: file_waves_events_events_proto_depIdxs,
		EnumInfos:         file_waves_events_events_proto_enumTypes,
		MessageInfos:      file_waves_events_events_proto_msgTypes,
	}.Build()
	File_waves_events_events_proto = out.File
	file_waves_events_events_proto_rawDesc = nil
	file_waves_events_events_proto_goTypes = nil
	file_waves_events_events_proto_depIdxs = nil
}
