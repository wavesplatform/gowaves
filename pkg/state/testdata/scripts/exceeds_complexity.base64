# {-# STDLIB_VERSION 1 #-}
# {-# CONTENT_TYPE EXPRESSION #-}
# match tx {
#     case dt: DataTransaction =>
#         let gameNotStarted =         match getInteger(dt.sender, "gameState") {
#             case i: Int =>
#                 false
#             case _ =>
#                 true
#         }
#         let oldGameState = extract(getInteger(dt.sender, "gameState"))
#         let newGameState =         match getInteger(dt.data, "gameState") {
#             case k: Int =>
#                 k
#             case _ =>
#                 7
#         }
#         let uselessVar = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar2 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar3 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar4 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar5 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar6 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar7 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar8 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar9 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar10 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar11 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar12 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar13 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar14 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar15 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar16 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let uselessVar17 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar2 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar3 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar4 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar5 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar6 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar7 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar8 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar9 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar10 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar11 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar12 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar13 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar14 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar15 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar16 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let newUselessVar17 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar2 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar3 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar4 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar5 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar6 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar7 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar8 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar9 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar10 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar11 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar12 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar13 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar14 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar15 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar16 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let anotherVar17 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar2 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar3 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar4 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar5 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar6 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar7 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar8 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar9 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar10 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar11 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar12 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar13 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar14 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar15 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar16 = sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let whateverVar17 = sigVerify(dt.bodyBytes, dt.proofs[1], fromBase58String(extract(getString(dt.data, "whatever"))))
#         let validStep = ((oldGameState + 1) == newGameState)
#         let gameInitialization = if (if (gameNotStarted)
#             then (extract(getInteger(dt.data, "command")) == 0)
#             else false)
#             then (extract(getInteger(dt.data, "gameState")) == 0)
#             else false
#         let playersRegistration = if (if (if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 1)
#             else false)
#             then (extract(getString(dt.data, "player1")) == "")
#             else false)
#             then (extract(getString(dt.data, "player2")) == "")
#             else false
#         let player1Registration = if (if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 2)
#             else false)
#             then sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "player1"))))
#             else false
#         let player2Registration = if (if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 3)
#             else false)
#             then sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.data, "player2"))))
#             else false
#         let gameBegin = if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 4)
#             else false
#         let move1 = if (if (if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 5)
#             else false)
#             then (2 >= extract(getInteger(dt.data, "move1")))
#             else false)
#             then sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.sender, "player1"))))
#             else false
#         let move2 = if (if (if (validStep)
#             then (extract(getInteger(dt.data, "command")) == 6)
#             else false)
#             then (2 >= extract(getInteger(dt.data, "move2")))
#             else false)
#             then sigVerify(dt.bodyBytes, dt.proofs[0], fromBase58String(extract(getString(dt.sender, "player2"))))
#             else false
#         let gameEnd = if (if ((extract(getInteger(dt.sender, "gameState")) == 6))
#             then (extract(getInteger(dt.data, "command")) == 7)
#             else false)
#             then (extract(getString(dt.data, "gameState")) == "ended")
#             else false
#         if (if (if (if (if (if (if (gameInitialization)
#             then true
#             else playersRegistration)
#             then true
#             else player1Registration)
#             then true
#             else player2Registration)
#             then true
#             else gameBegin)
#             then true
#             else move1)
#             then true
#             else move2)
#             then true
#             else gameEnd
#     case _ =>
#         true
# }


