package main

type Result Peg {
}

Code <- EOL? Directives Declaration+ EOF

# Whitespaces and new line symbols

_ <- [ \t]+

EOL <- (Comment / NewLine)+

NewLine <- _? ("\r\n" / "\n\r" / "\r" / "\n")

Comment ← _? "#" [^\r\n]*

EOF <- !.

# Types

Types <- (Int / Uint/ Boolean / ByteVector)

Int <- [-]? [0-9]+
Uint <- [0-9]+
Boolean <- "true" / "false"
ByteVector <- ("base16" / "base58" / "base64") '\''[^'\r\n]*'\''

# Directives
Directives <- ((StdLibVersionDirective / ScriptTypeDirective / ContentTypeDirective) EOL)+

StartDirective <- "{-#"
EndDirective <- "#-}"

StdLibVersionDirective <- StartDirective _ "STDLIB_VERSION" _ Int _ EndDirective

Word <- [_a-zA-Z-] [_a-zA-Z0-9-]*

ScriptTypeDirective <- StartDirective _ "SCRIPT_TYPE" _ Word _ EndDirective

ContentTypeDirective <- StartDirective _ "CONTENT_TYPE" _ Word _ EndDirective

# Variables

Declaration <- "let" _ Word _ "=" _ Types EOL