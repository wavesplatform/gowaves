// Code generated by protoc-gen-go. DO NOT EDIT.
// source: assets_api.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssetRequest struct {
	AssetId              []byte   `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetRequest) Reset()         { *m = AssetRequest{} }
func (m *AssetRequest) String() string { return proto.CompactTextString(m) }
func (*AssetRequest) ProtoMessage()    {}
func (*AssetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca8745a5bcec4e1, []int{0}
}

func (m *AssetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetRequest.Unmarshal(m, b)
}
func (m *AssetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetRequest.Marshal(b, m, deterministic)
}
func (m *AssetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetRequest.Merge(m, src)
}
func (m *AssetRequest) XXX_Size() int {
	return xxx_messageInfo_AssetRequest.Size(m)
}
func (m *AssetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssetRequest proto.InternalMessageInfo

func (m *AssetRequest) GetAssetId() []byte {
	if m != nil {
		return m.AssetId
	}
	return nil
}

type AssetInfoResponse struct {
	Issuer               []byte             `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Name                 []byte             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          []byte             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Decimals             int32              `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Reissuable           bool               `protobuf:"varint,5,opt,name=reissuable,proto3" json:"reissuable,omitempty"`
	TotalVolume          int64              `protobuf:"varint,6,opt,name=total_volume,json=totalVolume,proto3" json:"total_volume,omitempty"`
	Script               *ScriptData        `protobuf:"bytes,7,opt,name=script,proto3" json:"script,omitempty"`
	Sponsorship          int64              `protobuf:"varint,8,opt,name=sponsorship,proto3" json:"sponsorship,omitempty"`
	IssueTransaction     *SignedTransaction `protobuf:"bytes,11,opt,name=issue_transaction,json=issueTransaction,proto3" json:"issue_transaction,omitempty"`
	SponsorBalance       int64              `protobuf:"varint,10,opt,name=sponsor_balance,json=sponsorBalance,proto3" json:"sponsor_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AssetInfoResponse) Reset()         { *m = AssetInfoResponse{} }
func (m *AssetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*AssetInfoResponse) ProtoMessage()    {}
func (*AssetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca8745a5bcec4e1, []int{1}
}

func (m *AssetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetInfoResponse.Unmarshal(m, b)
}
func (m *AssetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetInfoResponse.Marshal(b, m, deterministic)
}
func (m *AssetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetInfoResponse.Merge(m, src)
}
func (m *AssetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_AssetInfoResponse.Size(m)
}
func (m *AssetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssetInfoResponse proto.InternalMessageInfo

func (m *AssetInfoResponse) GetIssuer() []byte {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *AssetInfoResponse) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *AssetInfoResponse) GetDescription() []byte {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AssetInfoResponse) GetDecimals() int32 {
	if m != nil {
		return m.Decimals
	}
	return 0
}

func (m *AssetInfoResponse) GetReissuable() bool {
	if m != nil {
		return m.Reissuable
	}
	return false
}

func (m *AssetInfoResponse) GetTotalVolume() int64 {
	if m != nil {
		return m.TotalVolume
	}
	return 0
}

func (m *AssetInfoResponse) GetScript() *ScriptData {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *AssetInfoResponse) GetSponsorship() int64 {
	if m != nil {
		return m.Sponsorship
	}
	return 0
}

func (m *AssetInfoResponse) GetIssueTransaction() *SignedTransaction {
	if m != nil {
		return m.IssueTransaction
	}
	return nil
}

func (m *AssetInfoResponse) GetSponsorBalance() int64 {
	if m != nil {
		return m.SponsorBalance
	}
	return 0
}

func init() {
	proto.RegisterType((*AssetRequest)(nil), "com.wavesplatform.api.grpc.AssetRequest")
	proto.RegisterType((*AssetInfoResponse)(nil), "com.wavesplatform.api.grpc.AssetInfoResponse")
}

func init() { proto.RegisterFile("assets_api.proto", fileDescriptor_9ca8745a5bcec4e1) }

var fileDescriptor_9ca8745a5bcec4e1 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x6f, 0xd4, 0x30,
	0x10, 0x85, 0x15, 0xb6, 0xdd, 0x5d, 0x26, 0x0b, 0x74, 0xe7, 0x80, 0x4c, 0x0e, 0x28, 0xf4, 0x00,
	0xe1, 0x40, 0x90, 0xca, 0x1d, 0xd4, 0x0a, 0x09, 0xf5, 0xea, 0x22, 0x0e, 0x5c, 0x22, 0xaf, 0x33,
	0x2d, 0x96, 0x12, 0xdb, 0xd8, 0xde, 0xf2, 0x27, 0xf8, 0xd1, 0x28, 0x93, 0x08, 0x7c, 0x01, 0x6e,
	0x99, 0x6f, 0x5e, 0xe6, 0x65, 0xe6, 0x05, 0xce, 0x54, 0x8c, 0x94, 0x62, 0xa7, 0xbc, 0x69, 0x7d,
	0x70, 0xc9, 0x61, 0xa5, 0xdd, 0xd8, 0xfe, 0x50, 0xf7, 0x14, 0xfd, 0xa0, 0xd2, 0xad, 0x0b, 0x63,
	0x3b, 0x35, 0xef, 0x82, 0xd7, 0xd5, 0x3e, 0x05, 0x65, 0xa3, 0xd2, 0xc9, 0x38, 0x3b, 0xcb, 0x2b,
	0x54, 0x5a, 0xbb, 0xa3, 0xcd, 0x47, 0x9c, 0xbf, 0x86, 0xdd, 0xe5, 0x34, 0x56, 0xd2, 0xf7, 0x23,
	0xc5, 0x84, 0xcf, 0x60, 0xcb, 0x36, 0x9d, 0xe9, 0x45, 0x51, 0x17, 0xcd, 0x4e, 0x6e, 0xb8, 0xbe,
	0xee, 0xcf, 0x7f, 0xae, 0x60, 0xcf, 0xda, 0x6b, 0x7b, 0xeb, 0x24, 0x45, 0xef, 0x6c, 0x24, 0x7c,
	0x0a, 0x6b, 0x13, 0xe3, 0x91, 0xc2, 0x22, 0x5f, 0x2a, 0x44, 0x38, 0xb1, 0x6a, 0x24, 0xf1, 0x80,
	0x29, 0x3f, 0x63, 0x0d, 0x65, 0x4f, 0x51, 0x07, 0xe3, 0xa7, 0xaf, 0x12, 0x2b, 0x6e, 0xe5, 0x08,
	0x2b, 0xd8, 0xf6, 0xa4, 0xcd, 0xa8, 0x86, 0x28, 0x4e, 0xea, 0xa2, 0x39, 0x95, 0xbf, 0x6b, 0x7c,
	0x0e, 0x10, 0x68, 0x9a, 0xae, 0x0e, 0x03, 0x89, 0xd3, 0xba, 0x68, 0xb6, 0x32, 0x23, 0xf8, 0x02,
	0x76, 0xc9, 0x25, 0x35, 0x74, 0xf7, 0x6e, 0x38, 0x8e, 0x24, 0xd6, 0x75, 0xd1, 0xac, 0x64, 0xc9,
	0xec, 0x0b, 0x23, 0x7c, 0x0f, 0xeb, 0xd9, 0x4b, 0x6c, 0xea, 0xa2, 0x29, 0x2f, 0x5e, 0xb6, 0x7f,
	0xbf, 0x60, 0x7b, 0xc3, 0xca, 0x8f, 0x2a, 0x29, 0xb9, 0xbc, 0x35, 0x2d, 0xc0, 0x6b, 0xbb, 0x10,
	0xbf, 0x19, 0x2f, 0xb6, 0xb3, 0x43, 0x86, 0xf0, 0x03, 0xec, 0xf9, 0x00, 0x5d, 0x76, 0x7e, 0x51,
	0xb2, 0x19, 0xb6, 0x37, 0xe6, 0xce, 0x52, 0xff, 0xf9, 0x4f, 0x47, 0x9e, 0xb1, 0x38, 0x23, 0xf8,
	0x0a, 0x9e, 0x2c, 0xf3, 0xba, 0x83, 0x1a, 0x94, 0xd5, 0x24, 0x80, 0x6d, 0x1e, 0x2f, 0xf8, 0x6a,
	0xa6, 0x17, 0x0e, 0x1e, 0x72, 0x1a, 0xf1, 0xd2, 0x1b, 0x3c, 0xc0, 0xe6, 0xd3, 0x1c, 0x0c, 0x36,
	0xff, 0xda, 0x29, 0xcf, 0xba, 0x7a, 0xf3, 0x5f, 0x65, 0x9e, 0xf4, 0xd5, 0xa3, 0xaf, 0xa5, 0x1e,
	0x0c, 0xd9, 0xf4, 0x76, 0x12, 0x1c, 0xd6, 0xfc, 0x03, 0xbd, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x79, 0xc9, 0xca, 0xad, 0x97, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AssetsApiClient is the client API for AssetsApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AssetsApiClient interface {
	GetInfo(ctx context.Context, in *AssetRequest, opts ...grpc.CallOption) (*AssetInfoResponse, error)
}

type assetsApiClient struct {
	cc *grpc.ClientConn
}

func NewAssetsApiClient(cc *grpc.ClientConn) AssetsApiClient {
	return &assetsApiClient{cc}
}

func (c *assetsApiClient) GetInfo(ctx context.Context, in *AssetRequest, opts ...grpc.CallOption) (*AssetInfoResponse, error) {
	out := new(AssetInfoResponse)
	err := c.cc.Invoke(ctx, "/com.wavesplatform.api.grpc.AssetsApi/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AssetsApiServer is the server API for AssetsApi service.
type AssetsApiServer interface {
	GetInfo(context.Context, *AssetRequest) (*AssetInfoResponse, error)
}

// UnimplementedAssetsApiServer can be embedded to have forward compatible implementations.
type UnimplementedAssetsApiServer struct {
}

func (*UnimplementedAssetsApiServer) GetInfo(ctx context.Context, req *AssetRequest) (*AssetInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterAssetsApiServer(s *grpc.Server, srv AssetsApiServer) {
	s.RegisterService(&_AssetsApi_serviceDesc, srv)
}

func _AssetsApi_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetsApiServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.wavesplatform.api.grpc.AssetsApi/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetsApiServer).GetInfo(ctx, req.(*AssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AssetsApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.wavesplatform.api.grpc.AssetsApi",
	HandlerType: (*AssetsApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _AssetsApi_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "assets_api.proto",
}
